{"ast":null,"code":"const Flight = require(\"../models/flightModel\");\n\nconst createFlight = (req, res) => {\n  console.log(\"request came\");\n  console.log(req.body);\n  const flight = new Flight({\n    flightNumber: req.body.flightNumber,\n    departureTime: req.body.departureTime,\n    arrivalTime: req.body.arrivalTime,\n    numberofEconomySeats: req.body.numberofEconomySeats,\n    arrivalDate: req.body.arrivalDate,\n    departureDate: req.body.departureDate,\n    numberofBusinessSeats: req.body.numberofBusinessSeats,\n    airport: req.body.airport\n  });\n  flight.save().then(result => {\n    res.header(\"Content-Type\", \"application/json\");\n    res.send(JSON.stringify(result, null, 4));\n  }).catch(err => {\n    res.status(400).send(\"Address is needed\");\n  });\n};\n\nconst searchFlight = (req, res) => {\n  Flight.find().then(result => {\n    res.header(\"Content-Type\", \"application/json\");\n    res.send(JSON.stringify(result, null, 4));\n  });\n};\n\nconst showFlight = async (req, res) => {\n  Flight.find({}, (err, result) => {\n    if (err) {\n      res.send(err);\n    } else {\n      res.send(result);\n    }\n  });\n};\n\nconst updateFlight = async (req, res) => {\n  const id = req.body.id;\n  const newFlightNumber = req.body.newFlightNumber;\n  const newDepartureTime = req.body.newDepartureTime;\n  const newArrivalTime = req.body.newArrivalTime;\n  const newEconomySeats = req.body.newEconomySeats;\n  const newArrivalDate = req.body.newArrivalDate;\n  const newDepartureDate = req.body.newDepartureDate;\n  const newBusinessSeats = req.body.newBusinessSeats;\n  const newAirport = req.body.newAirport;\n\n  try {\n    await Flight.findOne(id, (error, flightToUpdate) => {\n      flightToUpdate.flightNumber = newFlightNumber == null ? flightToUpdate.flightNumber : Number(newFlightNumber);\n      flightToUpdate.departureTime = newDepartureTime == null ? flightToUpdate.departureTime : Time(newDepartureTime);\n      flightToUpdate.arrivalTime = newArrivalTime == null ? flightToUpdate.arrivalTime : Time(newArrivalTime);\n      flightToUpdate.numberofEconomySeats = newEconomySeats == null ? flightToUpdate.numberofEconomySeats : Number(newEconomySeats);\n      flightToUpdate.arrivalDate = newArrivalDate == null ? flightToUpdate.arrivalDate : Date(newArrivalDate);\n      flightToUpdate.departureDate = newDepartureDate == null ? flightToUpdate.departureDate : Date(newDepartureDate);\n      flightToUpdate.numberofBusinessSeats = newBusinessSeats == null ? flightToUpdate.numberofBusinessSeats : Number(newBusinessSeats);\n      flightToUpdate.airport = newAirport == null ? flightToUpdate.airport : newAirport;\n      flightToUpdate.save();\n    });\n  } catch (err) {\n    console.log(err);\n  }\n\n  res.send(\"updated\");\n};\n\nconst deleteFlight = async (req, res) => {\n  const id = req.params.id;\n  await Flight.findByIdAndRemove(id).exec();\n  res.send(\"item deleted\");\n};\n\nmodule.exports = {\n  createFlight,\n  searchFlight,\n  updateFlight,\n  deleteFlight,\n  showFlight\n};","map":{"version":3,"sources":["/Users/abdulrahman_dahrawy/Documents/GitHub/Bread-Board/src/backEnd/src/Controller/FlightController.js"],"names":["Flight","require","createFlight","req","res","console","log","body","flight","flightNumber","departureTime","arrivalTime","numberofEconomySeats","arrivalDate","departureDate","numberofBusinessSeats","airport","save","then","result","header","send","JSON","stringify","catch","err","status","searchFlight","find","showFlight","updateFlight","id","newFlightNumber","newDepartureTime","newArrivalTime","newEconomySeats","newArrivalDate","newDepartureDate","newBusinessSeats","newAirport","findOne","error","flightToUpdate","Number","Time","Date","deleteFlight","params","findByIdAndRemove","exec","module","exports"],"mappings":"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","sourcesContent":["const Flight = require(\"../models/flightModel\");\n\nconst createFlight = (req, res) => {\n  console.log(\"request came\");\n  console.log(req.body);\n  const flight = new Flight({\n    flightNumber: req.body.flightNumber,\n    departureTime: req.body.departureTime,\n    arrivalTime: req.body.arrivalTime,\n    numberofEconomySeats: req.body.numberofEconomySeats,\n    arrivalDate: req.body.arrivalDate,\n    departureDate: req.body.departureDate,\n    numberofBusinessSeats: req.body.numberofBusinessSeats,\n    airport: req.body.airport,\n  });\n  flight\n    .save()\n    .then((result) => {\n      res.header(\"Content-Type\", \"application/json\");\n      res.send(JSON.stringify(result, null, 4));\n    })\n    .catch((err) => {\n      res.status(400).send(\"Address is needed\");\n    });\n};\n\nconst searchFlight = (req, res) => {\n  Flight.find().then((result) => {\n    res.header(\"Content-Type\", \"application/json\");\n    res.send(JSON.stringify(result, null, 4));\n  });\n};\n\nconst showFlight = async (req, res) => {\n  Flight.find({}, (err, result) => {\n    if (err) {\n      res.send(err);\n    } else {\n      res.send(result);\n    }\n  });\n};\n\nconst updateFlight = async (req, res) => {\n  const id = req.body.id;\n  const newFlightNumber = req.body.newFlightNumber;\n  const newDepartureTime = req.body.newDepartureTime;\n  const newArrivalTime = req.body.newArrivalTime;\n  const newEconomySeats = req.body.newEconomySeats;\n  const newArrivalDate = req.body.newArrivalDate;\n  const newDepartureDate = req.body.newDepartureDate;\n  const newBusinessSeats = req.body.newBusinessSeats;\n  const newAirport = req.body.newAirport;\n  try {\n    await Flight.findOne(id, (error, flightToUpdate) => {\n      flightToUpdate.flightNumber =\n        newFlightNumber == null\n          ? flightToUpdate.flightNumber\n          : Number(newFlightNumber);\n      flightToUpdate.departureTime =\n        newDepartureTime == null\n          ? flightToUpdate.departureTime\n          : Time(newDepartureTime);\n      flightToUpdate.arrivalTime =\n        newArrivalTime == null\n          ? flightToUpdate.arrivalTime\n          : Time(newArrivalTime);\n      flightToUpdate.numberofEconomySeats =\n        newEconomySeats == null\n          ? flightToUpdate.numberofEconomySeats\n          : Number(newEconomySeats);\n      flightToUpdate.arrivalDate =\n        newArrivalDate == null\n          ? flightToUpdate.arrivalDate\n          : Date(newArrivalDate);\n      flightToUpdate.departureDate =\n        newDepartureDate == null\n          ? flightToUpdate.departureDate\n          : Date(newDepartureDate);\n      flightToUpdate.numberofBusinessSeats =\n        newBusinessSeats == null\n          ? flightToUpdate.numberofBusinessSeats\n          : Number(newBusinessSeats);\n      flightToUpdate.airport =\n        newAirport == null ? flightToUpdate.airport : newAirport;\n      flightToUpdate.save();\n    });\n  } catch (err) {\n    console.log(err);\n  }\n  res.send(\"updated\");\n};\n\nconst deleteFlight = async (req, res) => {\n  const id = req.params.id;\n  await Flight.findByIdAndRemove(id).exec();\n  res.send(\"item deleted\");\n};\n\nmodule.exports = {\n  createFlight,\n  searchFlight,\n  updateFlight,\n  deleteFlight,\n  showFlight,\n};\n"]},"metadata":{},"sourceType":"module"}