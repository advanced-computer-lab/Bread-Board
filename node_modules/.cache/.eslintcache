[{"/Users/abdulrahman_dahrawy/Documents/GitHub/Bread-Board/src/index.js":"1","/Users/abdulrahman_dahrawy/Documents/GitHub/Bread-Board/src/reportWebVitals.js":"2","/Users/abdulrahman_dahrawy/Documents/GitHub/Bread-Board/src/App.js":"3","/Users/abdulrahman_dahrawy/Documents/GitHub/Bread-Board/src/Components/SearchFlights.js":"4","/Users/abdulrahman_dahrawy/Documents/GitHub/Bread-Board/src/Components/UserHome.js":"5","/Users/abdulrahman_dahrawy/Documents/GitHub/Bread-Board/src/Components/ReserveFlightsForGuests.js":"6","/Users/abdulrahman_dahrawy/Documents/GitHub/Bread-Board/src/Components/SignIn.js":"7","/Users/abdulrahman_dahrawy/Documents/GitHub/Bread-Board/src/Components/SignUp.js":"8","/Users/abdulrahman_dahrawy/Documents/GitHub/Bread-Board/src/Components/ManageFlights.js":"9","/Users/abdulrahman_dahrawy/Documents/GitHub/Bread-Board/src/Components/ReserveFlights.js":"10","/Users/abdulrahman_dahrawy/Documents/GitHub/Bread-Board/src/Components/EditPassword.js":"11","/Users/abdulrahman_dahrawy/Documents/GitHub/Bread-Board/src/Components/UserReserves.js":"12","/Users/abdulrahman_dahrawy/Documents/GitHub/Bread-Board/src/Components/EditInfo.js":"13","/Users/abdulrahman_dahrawy/Documents/GitHub/Bread-Board/src/Components/ForgotPassword.js":"14","/Users/abdulrahman_dahrawy/Documents/GitHub/Bread-Board/src/Components/Seats.js":"15","/Users/abdulrahman_dahrawy/Documents/GitHub/Bread-Board/src/constants.js":"16","/Users/abdulrahman_dahrawy/Documents/GitHub/Bread-Board/src/Components/StripeContainer.js":"17","/Users/abdulrahman_dahrawy/Documents/GitHub/Bread-Board/src/Components/PaymentForm.js":"18"},{"size":500,"mtime":1636315212881,"results":"19","hashOfConfig":"20"},{"size":362,"mtime":1636270693187,"results":"21","hashOfConfig":"20"},{"size":1571,"mtime":1640855305944,"results":"22","hashOfConfig":"20"},{"size":7167,"mtime":1638449347710,"results":"23","hashOfConfig":"20"},{"size":1042,"mtime":1639573275189,"results":"24","hashOfConfig":"20"},{"size":15771,"mtime":1638699208759,"results":"25","hashOfConfig":"20"},{"size":4820,"mtime":1640848907559,"results":"26","hashOfConfig":"20"},{"size":8860,"mtime":1640811366702,"results":"27","hashOfConfig":"20"},{"size":22020,"mtime":1638697673934,"results":"28","hashOfConfig":"20"},{"size":22088,"mtime":1640858787410,"results":"29","hashOfConfig":"20"},{"size":3175,"mtime":1640854961559,"results":"30","hashOfConfig":"20"},{"size":31874,"mtime":1640860967438,"results":"31","hashOfConfig":"20"},{"size":10367,"mtime":1640862430702,"results":"32","hashOfConfig":"20"},{"size":2489,"mtime":1640846520256,"results":"33","hashOfConfig":"20"},{"size":1954,"mtime":1640450928665,"results":"34","hashOfConfig":"20"},{"size":52,"mtime":1638565747544,"results":"35","hashOfConfig":"20"},{"size":662,"mtime":1640765178706,"results":"36","hashOfConfig":"20"},{"size":1872,"mtime":1640810856169,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"1kpx71i",{"filePath":"41","messages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"40"},{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54"},{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57"},{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"40"},{"filePath":"61","messages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63"},{"filePath":"64","messages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66"},{"filePath":"67","messages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69"},{"filePath":"70","messages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72"},{"filePath":"73","messages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75"},{"filePath":"76","messages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"40"},{"filePath":"79","messages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"81","messages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85"},"/Users/abdulrahman_dahrawy/Documents/GitHub/Bread-Board/src/index.js",[],["86","87"],"/Users/abdulrahman_dahrawy/Documents/GitHub/Bread-Board/src/reportWebVitals.js",[],"/Users/abdulrahman_dahrawy/Documents/GitHub/Bread-Board/src/App.js",[],"/Users/abdulrahman_dahrawy/Documents/GitHub/Bread-Board/src/Components/SearchFlights.js",[],"/Users/abdulrahman_dahrawy/Documents/GitHub/Bread-Board/src/Components/UserHome.js",[],"/Users/abdulrahman_dahrawy/Documents/GitHub/Bread-Board/src/Components/ReserveFlightsForGuests.js",["88","89","90","91","92","93","94","95","96"],"import { useState, useEffect } from \"react\";\nimport { useNavigate } from \"react-router\";\nimport axios from \"axios\";\nimport \"../App.css\";\nimport { Dialog } from \"@material-ui/core\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\n\nfunction ReserveFlights() {\n  const navigate = useNavigate();\n\n  const [adults, setAdults] = useState(0);\n  const [children, setChildren] = useState(0);\n  const [departureAirport, setDepartureAirport] = useState(null);\n  const [arrivalAirport, setArrivalAirport] = useState(null);\n  const [departureDate, setDepartureDate] = useState(null);\n  const [returnDate, setReturnDate] = useState(null);\n  const [cabin, setCabin] = useState(\"numberofEconomySeats\");\n\n  const [listOfFlights, setListOfFlights] = useState([]);\n\n  const [depFli, setDepFli] = useState(\"departure\");\n\n  const [openPopupMore, setOpenPopupMore] = useState(false);\n  const [openPopupSum, setOpenPopupSum] = useState(false);\n\n  const [flightID, setFlightID] = useState(null);\n\n  const [depFlightNumber, setDepFlightNumber] = useState(null);\n  const [depDepartureTime, setDepDepartureTime] = useState(null);\n  const [depArrivalTime, setDepArrivalTime] = useState(null);\n  const [depEconomySeats, setDepEconomySeats] = useState(null);\n  const [depArrivalDate, setDepArrivalDate] = useState(null);\n  const [depDepartureDate, setDepDepartureDate] = useState(null);\n  const [depBusinessSeats, setDepBusinessSeats] = useState(null);\n  const [depDepartureAirport, setDepDepartureAirport] = useState(null);\n  const [depArrivalAirport, setDepArrivalAirport] = useState(null);\n  const [depBaggage, setDepBaggage] = useState(null);\n  const [depTripDuration, setDepTripDuration] = useState(null);\n  const [depPrice, setDepPrice] = useState(null);\n\n  const [arrFlightNumber, setArrFlightNumber] = useState(null);\n  const [arrDepartureTime, setArrDepartureTime] = useState(null);\n  const [arrArrivalTime, setArrArrivalTime] = useState(null);\n  const [arrEconomySeats, setArrEconomySeats] = useState(null);\n  const [arrArrivalDate, setArrArrivalDate] = useState(null);\n  const [arrDepartureDate, setArrDepartureDate] = useState(null);\n  const [arrBusinessSeats, setArrBusinessSeats] = useState(null);\n  const [arrDepartureAirport, setArrDepartureAirport] = useState(null);\n  const [arrArrivalAirport, setArrArrivalAirport] = useState(null);\n  const [arrBaggage, setArrBaggage] = useState(null);\n  const [arrTripDuration, setArrTripDuration] = useState(null);\n  const [arrPrice, setArrPrice] = useState(null);\n\n  const home = () => {\n    navigate(-1);\n  };\n\n  const searchFlight = () => {\n    if (\n      adults == null ||\n      children == null ||\n      departureDate == null ||\n      returnDate == null ||\n      departureAirport == null ||\n      arrivalAirport == null\n    ) {\n      alert(\"Please fill all fields!!!\");\n    } else if (adults <= 0 && children <= 0) {\n      alert(\"please select a valid number of passengers !!!\");\n    } else if (adults < 0 || children < 0) {\n      alert(\"number of passenegers cannot be less than 0 !!!\");\n    } else if (departureDate > returnDate) {\n      alert(\"Please enter a valid return/arrival date !!!\");\n    } else {\n      var val = {\n        adults: adults,\n        children: children,\n        departureAirport: departureAirport,\n        arrivalAirport: arrivalAirport,\n        departureDate: departureDate,\n        returnDate: returnDate,\n        cabin: cabin,\n      };\n      axios\n        .post(\"http://localhost:8000/admin/departureFlights\", val)\n        .then((result) => {\n          if (result.data.length == 0) {\n            alert(\n              \"There are no flights available with required search criteria!!\"\n            );\n          }\n          setListOfFlights(result.data);\n        })\n        .catch((err) => {\n          console.log(err);\n        });\n    }\n    setDepFli(\"departure\");\n    setDepFlightNumber(null);\n    setArrFlightNumber(null);\n  };\n\n  const chooseDep = (fli) => {\n    if (depFlightNumber == null) {\n      setDepFlightNumber(fli.flightNumber);\n      setDepDepartureTime(fli.departureTime);\n      setDepArrivalTime(fli.arrivalTime);\n      setDepEconomySeats(fli.numberofEconomySeats);\n      setDepArrivalDate(fli.arrivalDate);\n      setDepDepartureDate(fli.departureDate);\n      setDepBusinessSeats(fli.numberofBusinessSeats);\n      setDepDepartureAirport(fli.departureAirport);\n      setDepArrivalAirport(fli.arrivalAirport);\n      setDepBaggage(fli.baggage);\n      setDepTripDuration(fli.tripDuration);\n      setDepPrice(fli.price);\n      setDepFli(\"return\");\n      var val = {\n        adults: adults,\n        children: children,\n        departureAirport: departureAirport,\n        arrivalAirport: arrivalAirport,\n        departureDate: departureDate,\n        returnDate: returnDate,\n        cabin: cabin,\n      };\n      axios\n        .post(\"http://localhost:8000/admin/returnFlights\", val)\n        .then((result) => {\n          setListOfFlights(result.data);\n        })\n        .catch((err) => {\n          console.log(err);\n        });\n    } else {\n      setArrFlightNumber(fli.flightNumber);\n      setArrDepartureTime(fli.departureTime);\n      setArrArrivalTime(fli.arrivalTime);\n      setArrEconomySeats(fli.numberofEconomySeats);\n      setArrArrivalDate(fli.arrivalDate);\n      setArrDepartureDate(fli.departureDate);\n      setArrBusinessSeats(fli.numberofBusinessSeats);\n      setArrDepartureAirport(fli.departureAirport);\n      setArrArrivalAirport(fli.arrivalAirport);\n      setArrBaggage(fli.baggage);\n      setArrTripDuration(fli.tripDuration);\n      setArrPrice(fli.price);\n      setOpenPopupSum(true);\n    }\n  };\n\n  useEffect(() => {\n    const listener = (event) => {\n      if (event.code === \"Enter\") {\n        event.preventDefault();\n        searchFlight();\n      }\n      if (event.code === \"Escape\") {\n        event.preventDefault();\n        home();\n      }\n    };\n    document.addEventListener(\"keydown\", listener);\n    return () => {\n      document.removeEventListener(\"keydown\", listener);\n    };\n  });\n\n  return (\n    <div>\n      <div className=\"HeaderContainer\">\n        <div className=\"HeaderButton\">\n          <button onClick={home}>Back</button>\n        </div>\n        <div className=\"SearchFlight\">\n          <h1>Search Flights</h1>\n        </div>\n      </div>\n      <div className=\"App\">\n        <div className=\"Reserveinputs\">\n          <div className=\"ReserveinputsSub\">\n            <div>\n              Number Of Children\n              <input\n                type=\"number\"\n                placeholder=\"Number Of Children\"\n                onChange={(event) => {\n                  setChildren(event.target.value);\n                }}\n              />\n              Number Of Adults\n              <input\n                type=\"number\"\n                placeholder=\"Number Of Adults\"\n                onChange={(event) => {\n                  setAdults(event.target.value);\n                }}\n              />\n              Departure Airport\n              <input\n                type=\"text\"\n                placeholder=\"Departure Airport\"\n                onChange={(event) => {\n                  setDepartureAirport(event.target.value);\n                }}\n              />\n            </div>\n            <div>\n              Arrival Airport\n              <input\n                type=\"text\"\n                placeholder=\"Arrival Airport\"\n                onChange={(event) => {\n                  setArrivalAirport(event.target.value);\n                }}\n              />\n              Departure Date\n              <input\n                type=\"date\"\n                onChange={(event) => {\n                  setDepartureDate(event.target.value);\n                }}\n              />\n              Return Date\n              <input\n                type=\"date\"\n                onChange={(event) => {\n                  setReturnDate(event.target.value);\n                }}\n              />\n            </div>\n            <div className=\"cabinButtons\">\n              <label className=\"cabinButtons1\">\n                Economy Seats :\n                <input\n                  type=\"radio\"\n                  name=\"cabinClass\"\n                  value=\"numberofEconomySeats\"\n                  checked={cabin === \"numberofEconomySeats\"}\n                  onChange={() => setCabin(\"numberofEconomySeats\")}\n                />\n              </label>\n              <label className=\"cabinButtons2\">\n                Business Seats :\n                <input\n                  type=\"radio\"\n                  name=\"cabinClass\"\n                  value=\"numberofBusinessSeats\"\n                  checked={cabin === \"numberofBusinessSeats\"}\n                  onChange={() => setCabin(\"numberofBusinessSeats\")}\n                />\n              </label>\n            </div>\n          </div>\n          <button onClick={searchFlight}>Submit</button>\n        </div>\n      </div>\n      <div className=\"listOfFlights\">\n        Choose a {depFli} flight from the below list\n        {listOfFlights.map((val) => {\n          return (\n            <div className=\"flightContainerRes\">\n              <div>\n                <div className=\"flightRes\">\n                  <h3 id=\"fliNumber\">\n                    Flight Number: <br />\n                    {val.flightNumber}\n                  </h3>\n                  <h3>\n                    Departure Time: <br />\n                    {val.departureTime}\n                  </h3>\n                  <h3>\n                    Arrival Time: <br />\n                    {val.arrivalTime}\n                  </h3>\n                  <h3>\n                    Trip Duration: <br />\n                    {val.tripDuration + \" Hours\"}\n                  </h3>\n                  <h3>\n                    Baggage Allowance: <br />\n                    {val.baggage + \" Bags\"}\n                  </h3>\n                  <h3>\n                    Price: <br />\n                    {val.price + \" L.E\"}\n                  </h3>\n                </div>\n              </div>\n              <button\n                onClick={() => {\n                  setFlightID(val._id);\n                  setOpenPopupMore(true);\n                }}\n              >\n                More Info\n              </button>\n              <button\n                id=\"chooseB\"\n                onClick={() => {\n                  chooseDep(val);\n                }}\n              >\n                Choose\n              </button>\n            </div>\n          );\n        })}\n      </div>\n      <Dialog open={openPopupMore} maxWidth=\"lg\">\n        <DialogTitle>\n          <div className=\"PopupHeaderRes\">\n            Flight Info\n            <button onClick={() => setOpenPopupMore(false)}>Close</button>\n          </div>\n        </DialogTitle>\n        <DialogContent dividers>\n          {listOfFlights.map((val) => {\n            if (val._id == flightID) {\n              return (\n                <div>\n                  <div className=\"flightPopup\">\n                    <h3 id=\"fliNumber\">\n                      Flight Number: <br />\n                      {val.flightNumber}\n                    </h3>\n                    <h3>\n                      Departure Time: <br />\n                      {val.departureTime}\n                    </h3>\n                    <h3>\n                      Departure Date: <br />\n                      {val.departureDate}\n                    </h3>\n                    <h3>\n                      Arrival Time: <br />\n                      {val.arrivalTime}\n                    </h3>\n                    <h3>\n                      Arrival Date: <br />\n                      {val.arrivalDate}\n                    </h3>\n                    <h3>\n                      Trip Duration: <br />\n                      {val.tripDuration + \" Hours\"}\n                    </h3>\n                  </div>\n                  <div className=\"flightPopup\">\n                    <h3 id=\"fliNumber\">\n                      Economy Seats: <br />\n                      {val.numberofEconomySeats}\n                    </h3>\n                    <h3>\n                      Business Seats: <br />\n                      {val.numberofBusinessSeats}\n                    </h3>\n                    <h3>\n                      Departure Airport: <br />\n                      {val.departureAirport}\n                    </h3>\n                    <h3>\n                      Arrival Airport: <br />\n                      {val.arrivalAirport}\n                    </h3>\n                    <h3>\n                      Baggage Allowance: <br />\n                      {val.baggage + \" Bags\"}\n                    </h3>\n                    <h3>\n                      Price: <br />\n                      {val.price + \" L.E\"}\n                    </h3>\n                  </div>\n                </div>\n              );\n            }\n          })}\n        </DialogContent>\n      </Dialog>\n      <Dialog open={openPopupSum} maxWidth=\"lg\">\n        <DialogTitle>\n          <div className=\"PopupHeaderRes\">\n            Ticket Summary\n            <button onClick={() => setOpenPopupSum(false)}>Close</button>\n          </div>\n        </DialogTitle>\n        <DialogContent dividers>\n          <div>\n            <div className=\"flightPopup\">\n              <h3 id=\"fliNumber\">\n                Flight Number: <br />\n                {depFlightNumber}\n              </h3>\n              <h3>\n                Departure Time: <br />\n                {depDepartureTime}\n              </h3>\n              <h3>\n                Departure Date: <br />\n                {depDepartureDate}\n              </h3>\n              <h3>\n                Arrival Time: <br />\n                {depArrivalTime}\n              </h3>\n              <h3>\n                Arrival Date: <br />\n                {depArrivalDate}\n              </h3>\n              <h3>\n                Trip Duration: <br />\n                {depTripDuration + \" Hours\"}\n              </h3>\n            </div>\n            <div className=\"flightPopup\">\n              <h3>\n                Departure Airport: <br />\n                {depDepartureAirport}\n              </h3>\n              <h3>\n                Arrival Airport: <br />\n                {depArrivalAirport}\n              </h3>\n              <h3>\n                Price: <br />\n                {depPrice + \" L.E\"}\n              </h3>\n            </div>\n          </div>\n          <br></br>\n          <div>\n            <div className=\"flightPopup\">\n              <h3 id=\"fliNumber\">\n                Flight Number: <br />\n                {arrFlightNumber}\n              </h3>\n              <h3>\n                Departure Time: <br />\n                {arrDepartureTime}\n              </h3>\n              <h3>\n                Departure Date: <br />\n                {arrDepartureDate}\n              </h3>\n              <h3>\n                Arrival Time: <br />\n                {arrArrivalTime}\n              </h3>\n              <h3>\n                Arrival Date: <br />\n                {arrArrivalDate}\n              </h3>\n              <h3>\n                Trip Duration: <br />\n                {arrTripDuration + \" Hours\"}\n              </h3>\n            </div>\n            <div className=\"flightPopup\">\n              <h3>\n                Departure Airport: <br />\n                {arrDepartureAirport}\n              </h3>\n              <h3>\n                Arrival Airport: <br />\n                {arrArrivalAirport}\n              </h3>\n              <h3>\n                Price: <br />\n                {arrPrice + \" L.E\"}\n              </h3>\n            </div>\n            <div>\n              Total Price:{\" \"}\n              {(Number(children) + Number(adults)) *\n                Number(depPrice + arrPrice)}\n            </div>\n          </div>\n        </DialogContent>\n      </Dialog>\n    </div>\n  );\n}\n\nexport default ReserveFlights;\n","/Users/abdulrahman_dahrawy/Documents/GitHub/Bread-Board/src/Components/SignIn.js",["97","98","99","100","101","102"],"import { useState, useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport axios from \"axios\";\nimport Avatar from \"@mui/material/Avatar\";\nimport Button from \"@mui/material/Button\";\nimport TextField from \"@mui/material/TextField\";\nimport Link from \"@mui/material/Link\";\nimport Paper from \"@mui/material/Paper\";\nimport Box from \"@mui/material/Box\";\nimport Grid from \"@mui/material/Grid\";\nimport LockOutlinedIcon from \"@mui/icons-material/LockOutlined\";\nimport Typography from \"@mui/material/Typography\";\nimport { createTheme, ThemeProvider } from \"@mui/material/styles\";\nimport Image from \"../img/airplane.jpg\";\n\nconst theme = createTheme();\n\nfunction SignIn() {\n  const navigate = useNavigate();\n\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  const login = () => {\n    if (email == \"\" || password == \"\") {\n      alert(\"Please fill all fields!!!\");\n    } else {\n      axios\n        .post(\"http://localhost:8000/login\", {\n          email: email,\n          password: password,\n        })\n        .then((result) => {\n          if (result.data.message == \"Success Admin\") {\n            navigate(\"/admin\");\n          } else if (result.data.message == \"Success User\") {\n            navigate(\"/user/home\");\n            window.localStorage.setItem(\"user\", result.data.token);\n          } else {\n            alert(result.data.message);\n          }\n        });\n    }\n  };\n\n  const register = () => {\n    navigate(\"/register\");\n  };\n\n  const guest = () => {\n    navigate(\"/guest/home/reserveFlights\");\n  };\n\n  useEffect(() => {\n    const listener = (event) => {\n      if (event.code === \"Enter\") {\n        event.preventDefault();\n        login();\n      }\n    };\n    document.addEventListener(\"keydown\", listener);\n    return () => {\n      document.removeEventListener(\"keydown\", listener);\n    };\n  });\n\n  return (\n    <ThemeProvider theme={theme}>\n      <Grid container component=\"main\" sx={{ height: \"100vh\" }}>\n        <Grid\n          item\n          xs={false}\n          sm={4}\n          md={7}\n          sx={{\n            backgroundImage: `url(${Image})`,\n            backgroundRepeat: \"no-repeat\",\n            backgroundColor: (t) =>\n              t.palette.mode === \"light\"\n                ? t.palette.grey[50]\n                : t.palette.grey[900],\n            backgroundSize: \"cover\",\n            backgroundPosition: \"center\",\n          }}\n        />\n        <Grid item xs={12} sm={8} md={5} component={Paper} elevation={6} square>\n          <Box\n            sx={{\n              my: 8,\n              mx: 4,\n              display: \"flex\",\n              flexDirection: \"column\",\n              alignItems: \"center\",\n            }}\n          >\n            <Avatar sx={{ m: 1, bgcolor: \"secondary.main\" }}>\n              <LockOutlinedIcon />\n            </Avatar>\n            <Typography component=\"h1\" variant=\"h5\">\n              Sign in\n            </Typography>\n            <Box component=\"form\" noValidate sx={{ mt: 1 }}>\n              <TextField\n                margin=\"normal\"\n                required\n                fullWidth\n                id=\"email\"\n                label=\"Email Address\"\n                name=\"email\"\n                autoComplete=\"email\"\n                autoFocus\n                placeholder=\"example@gmail.com\"\n                onChange={(event) => {\n                  setEmail(event.target.value);\n                }}\n              />\n              <TextField\n                margin=\"normal\"\n                required\n                fullWidth\n                name=\"password\"\n                label=\"Password\"\n                type=\"password\"\n                id=\"password\"\n                autoComplete=\"current-password\"\n                onChange={(event) => {\n                  setPassword(event.target.value);\n                }}\n              />\n              <Button\n                type=\"button\"\n                fullWidth\n                variant=\"contained\"\n                sx={{ mt: 3, mb: 2 }}\n                onClick={login}\n              >\n                Sign In\n              </Button>\n              <Grid container>\n                <Grid item xs>\n                  <Link href=\"/guest/home/reserveFlights\" variant=\"body2\">\n                    Sign in as a Guest\n                  </Link>\n                </Grid>\n                <Grid item xs>\n                  <Link href=\"/forgotPassword\" variant=\"body2\">\n                    Forgot Password?\n                  </Link>\n                </Grid>\n                <Grid item>\n                  <Link href=\"/register\" variant=\"body2\">\n                    {\"Don't have an account? Sign Up\"}\n                  </Link>\n                </Grid>\n              </Grid>\n            </Box>\n          </Box>\n        </Grid>\n      </Grid>\n    </ThemeProvider>\n  );\n}\n\nexport default SignIn;\n","/Users/abdulrahman_dahrawy/Documents/GitHub/Bread-Board/src/Components/SignUp.js",["103","104","105","106","107","108","109","110","111","112","113"],"import { useState, useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport axios from \"axios\";\nimport Avatar from \"@mui/material/Avatar\";\nimport Button from \"@mui/material/Button\";\nimport CssBaseline from \"@mui/material/CssBaseline\";\nimport TextField from \"@mui/material/TextField\";\nimport Link from \"@mui/material/Link\";\nimport Grid from \"@mui/material/Grid\";\nimport Box from \"@mui/material/Box\";\nimport LockOutlinedIcon from \"@mui/icons-material/LockOutlined\";\nimport Typography from \"@mui/material/Typography\";\nimport Container from \"@mui/material/Container\";\nimport { createTheme, ThemeProvider } from \"@mui/material/styles\";\n\nconst theme = createTheme();\n\nfunction SignUp() {\n  const navigate = useNavigate();\n\n  const [firstName, setFirstName] = useState(\"\");\n  const [lastName, setLastName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [passportNumber, setPassportNumber] = useState(\"\");\n  const [homeAddress, setHomeAddress] = useState(\"\");\n  const [countryCode, setCountryCode] = useState(\"\");\n  const [telephoneNumber, setTelephoneNumber] = useState(\"\");\n  const [secondTelephoneNumber, setSecondTelephoneNumber] = useState(\"\");\n  const [userName, setUserName] = useState(\"\");\n\n  const register = () => {\n    if (\n      firstName == \"\" ||\n      lastName == \"\" ||\n      email == \"\" ||\n      password == \"\" ||\n      passportNumber == \"\" ||\n      homeAddress == \"\" ||\n      countryCode == \"\" ||\n      telephoneNumber == \"\" ||\n      userName == \"\"\n    ) {\n      alert(\"Please fill all fields!!!\");\n    } else if (countryCode <= 0) {\n      alert(\"Country code can't be negative\");\n    } else if (telephoneNumber <= 0) {\n      alert(\"Telephone number can't be negative\");\n    } else if (secondTelephoneNumber < 0) {\n      alert(\"Second telephone number can't be negative\");\n    } else if (telephoneNumber.length < 11 || telephoneNumber.length > 11) {\n      alert(\"Telephone number must be 11 digits\");\n    } else if (\n      secondTelephoneNumber != 0 &&\n      (secondTelephoneNumber.length < 11 || secondTelephoneNumber.length > 11)\n    ) {\n      alert(\"Second telephone number must be 11 digits\");\n    } else {\n      var val = {\n        firstName: firstName,\n        lastName: lastName,\n        email: email,\n        password: password,\n        passportNumber: passportNumber,\n        homeAddress: homeAddress,\n        countryCode: countryCode,\n        telephoneNumber: telephoneNumber,\n        secondTelephoneNumber: secondTelephoneNumber,\n        userName: userName,\n        admin: false,\n      };\n      Object.keys(val).forEach(\n        (k) => !val[k] && val[k] !== undefined && delete val[k]\n      );\n      axios.post(\"http://localhost:8000/register\", val).then((result) => {\n        if (result.data.name == \"ValidationError\") {\n          alert(\"Email already exists!!!\");\n        } else {\n          alert(\"Registered Succefully\");\n          navigate(-1);\n        }\n      });\n    }\n  };\n\n  useEffect(() => {\n    const listener = (event) => {\n      if (event.code === \"Enter\") {\n        event.preventDefault();\n        register();\n      }\n    };\n    document.addEventListener(\"keydown\", listener);\n    return () => {\n      document.removeEventListener(\"keydown\", listener);\n    };\n  });\n\n  return (\n    <ThemeProvider theme={theme}>\n      <Container component=\"main\" maxWidth=\"xs\">\n        <CssBaseline />\n        <Box\n          sx={{\n            marginTop: 1,\n            display: \"flex\",\n            flexDirection: \"column\",\n            alignItems: \"center\",\n          }}\n        >\n          <Avatar sx={{ m: 1, bgcolor: \"secondary.main\" }}>\n            <LockOutlinedIcon />\n          </Avatar>\n          <Typography component=\"h1\" variant=\"h5\">\n            Sign up\n          </Typography>\n          <Box component=\"form\" noValidate sx={{ mt: 3 }}>\n            <Grid container spacing={2}>\n              <Grid item xs={12} sm={6}>\n                <TextField\n                  name=\"firstName\"\n                  required\n                  fullWidth\n                  id=\"firstName\"\n                  label=\"First Name\"\n                  placeholder=\"First Name\"\n                  autoFocus\n                  onChange={(event) => {\n                    setFirstName(event.target.value);\n                  }}\n                />\n              </Grid>\n              <Grid item xs={12} sm={6}>\n                <TextField\n                  required\n                  fullWidth\n                  id=\"lastName\"\n                  label=\"Last Name\"\n                  name=\"lastName\"\n                  placeholder=\"Last Name\"\n                  onChange={(event) => {\n                    setLastName(event.target.value);\n                  }}\n                />\n              </Grid>\n              <Grid item xs={12}>\n                <TextField\n                  required\n                  fullWidth\n                  id=\"email\"\n                  label=\"Email Address\"\n                  name=\"email\"\n                  placeholder=\"test@gmail.com\"\n                  onChange={(event) => {\n                    setEmail(event.target.value);\n                  }}\n                />\n              </Grid>\n              <Grid item xs={12}>\n                <TextField\n                  required\n                  fullWidth\n                  id=\"address\"\n                  label=\"Home Address\"\n                  name=\"address\"\n                  placeholder=\"Address\"\n                  onChange={(event) => {\n                    setHomeAddress(event.target.value);\n                  }}\n                />\n              </Grid>\n              <Grid item xs={12}>\n                <TextField\n                  required\n                  fullWidth\n                  id=\"code\"\n                  label=\"Country Code\"\n                  type=\"number\"\n                  name=\"code\"\n                  placeholder=\"Country Code\"\n                  onChange={(event) => {\n                    setCountryCode(event.target.value);\n                  }}\n                />\n              </Grid>\n              <Grid item xs={12} sm={6}>\n                <TextField\n                  required\n                  fullWidth\n                  id=\"number\"\n                  label=\"Telephone\"\n                  type=\"number\"\n                  name=\"number\"\n                  placeholder=\"Telephone\"\n                  onChange={(event) => {\n                    setTelephoneNumber(event.target.value);\n                  }}\n                />\n              </Grid>\n              <Grid item xs={12} sm={6}>\n                <TextField\n                  fullWidth\n                  id=\"number2\"\n                  label=\"(Optional)Telephone\"\n                  type=\"number\"\n                  name=\"number2\"\n                  placeholder=\"Telephone\"\n                  onChange={(event) => {\n                    setSecondTelephoneNumber(event.target.value);\n                  }}\n                />\n              </Grid>\n              <Grid item xs={12}>\n                <TextField\n                  fullWidth\n                  id=\"passport\"\n                  label=\"Passport Number\"\n                  name=\"passport\"\n                  placeholder=\"A123456789\"\n                  onChange={(event) => {\n                    setPassportNumber(event.target.value);\n                  }}\n                />\n              </Grid>\n              <Grid item xs={12} sm={6}>\n                <TextField\n                  fullWidth\n                  id=\"username\"\n                  label=\"Username\"\n                  name=\"username\"\n                  placeholder=\"Username\"\n                  onChange={(event) => {\n                    setUserName(event.target.value);\n                  }}\n                />\n              </Grid>\n              <Grid item xs={12} sm={6}>\n                <TextField\n                  required\n                  fullWidth\n                  name=\"password\"\n                  label=\"Password\"\n                  type=\"password\"\n                  id=\"password\"\n                  placeholder=\"Password...\"\n                  onChange={(event) => {\n                    setPassword(event.target.value);\n                  }}\n                />\n              </Grid>\n              <Grid item xs={12}></Grid>\n            </Grid>\n            <Button\n              type=\"button\"\n              fullWidth\n              variant=\"contained\"\n              sx={{ mt: 3, mb: 2 }}\n              onClick={register}\n            >\n              Sign Up\n            </Button>\n            <Grid container justifyContent=\"flex-end\">\n              <Grid item>\n                <Link href=\"/\" variant=\"body2\">\n                  Already have an account? Sign in\n                </Link>\n              </Grid>\n            </Grid>\n          </Box>\n        </Box>\n      </Container>\n    </ThemeProvider>\n  );\n}\n\nexport default SignUp;\n","/Users/abdulrahman_dahrawy/Documents/GitHub/Bread-Board/src/Components/ManageFlights.js",["114","115","116","117","118","119","120","121"],"import { useState, useEffect } from \"react\";\nimport { useNavigate } from \"react-router\";\nimport axios from \"axios\";\nimport \"../App.css\";\nimport { Dialog } from \"@material-ui/core\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\n\nfunction CreateFlight() {\n  const navigate = useNavigate();\n\n  const [flightNumber, setFlightNumber] = useState(null);\n  const [departureTime, setDepartureTime] = useState(null);\n  const [arrivalTime, setArrivalTime] = useState(null);\n  const [economySeats, setEconomySeats] = useState(null);\n  const [arrivalDate, setArrivalDate] = useState(null);\n  const [departureDate, setDepartureDate] = useState(null);\n  const [businessSeats, setBusinessSeats] = useState(null);\n  const [departureAirport, setDepartureAirport] = useState(null);\n  const [arrivalAirport, setArrivalAirport] = useState(null);\n  const [baggage, setBaggage] = useState(null);\n  const [tripDuration, setTripDuration] = useState(null);\n  const [price, setPrice] = useState(null);\n\n  const [flightNumberU, setFlightNumberU] = useState(null);\n  const [departureTimeU, setDepartureTimeU] = useState(null);\n  const [arrivalTimeU, setArrivalTimeU] = useState(null);\n  const [economySeatsU, setEconomySeatsU] = useState(null);\n  const [arrivalDateU, setArrivalDateU] = useState(null);\n  const [departureDateU, setDepartureDateU] = useState(null);\n  const [businessSeatsU, setBusinessSeatsU] = useState(null);\n  const [departureAirportU, setDepartureAirportU] = useState(null);\n  const [arrivalAirportU, setArrivalAirportU] = useState(null);\n  const [baggageU, setBaggageU] = useState(null);\n  const [tripDurationU, setTripDurationU] = useState(null);\n  const [priceU, setPriceU] = useState(null);\n\n  const [listOfFlights, setListOfFlights] = useState([]);\n\n  const [openPopupCreate, setOpenPopupCreate] = useState(false);\n  const [openPopupUpdate, setOpenPopupUpdate] = useState(false);\n\n  const [upID, setUpID] = useState(null);\n\n  const logout = () => {\n    navigate(-1);\n  };\n\n  const create = () => {\n    if (\n      flightNumber == null ||\n      departureTime == null ||\n      arrivalTime == null ||\n      departureDate == null ||\n      arrivalDate == null ||\n      economySeats == null ||\n      businessSeats == null ||\n      departureAirport == null ||\n      arrivalAirport == null ||\n      baggage == null ||\n      tripDuration == null ||\n      price == null\n    ) {\n      alert(\"Please fill all fields!!!\");\n    } else if (flightNumber <= 0) {\n      alert(\"Flight number must be positive!!!\");\n    } else if (price <= 0) {\n      alert(\"Price number must be positive!!!\");\n    } else if (economySeats <= 0) {\n      alert(\"Ecnonomy seats must be more than 0 !!!\");\n    } else if (businessSeats <= 0) {\n      alert(\"Business seats number cannot be more than 0 !!!\");\n    } else if (baggage <= 0) {\n      alert(\"Baggage number must be positive!!!\");\n    } else if (departureDate > arrivalDate) {\n      alert(\"Departure date can't be after Arrival date!!!\");\n    } else if (departureDate == arrivalDate && departureTime >= arrivalTime) {\n      alert(\"Departure time must be before Arrival time if on the same day!!!\");\n    } else {\n      axios\n        .post(\"http://localhost:8000/admin/createFlight\", {\n          flightNumber: flightNumber,\n          departureTime: departureTime,\n          arrivalTime: arrivalTime,\n          numberofEconomySeats: economySeats,\n          arrivalDate: arrivalDate,\n          departureDate: departureDate,\n          numberofBusinessSeats: businessSeats,\n          departureAirport: departureAirport,\n          arrivalAirport: arrivalAirport,\n          baggage: baggage,\n          tripDuration: tripDuration,\n          price: price,\n        })\n        .then((result) => {\n          if (result.data.name == \"ValidationError\") {\n            alert(\"Flight number already exists!!!\");\n          } else {\n            setOpenPopupCreate(false);\n            setListOfFlights([...listOfFlights, result.data]);\n            setFlightNumber(null);\n            setDepartureTime(null);\n            setArrivalTime(null);\n            setDepartureDate(null);\n            setArrivalDate(null);\n            setEconomySeats(null);\n            setBusinessSeats(null);\n            setDepartureAirport(null);\n            setArrivalAirport(null);\n            setBaggage(null);\n            setTripDuration(null);\n            setPrice(null);\n          }\n        })\n        .catch((err) => {});\n    }\n  };\n\n  const updFlight = (id) => {\n    if (window.confirm(\"Are you sure to update this Flight?\")) {\n      axios\n        .post(\"http://localhost:8000/admin/searchFlightOne\", { _id: id })\n        .then((result) => {\n          var val = {\n            _id: id,\n            flightNumber: flightNumberU,\n            departureTime: departureTimeU,\n            arrivalTime: arrivalTimeU,\n            numberofEconomySeats: economySeatsU,\n            arrivalDate: arrivalDateU,\n            departureDate: departureDateU,\n            numberofBusinessSeats: businessSeatsU,\n            departureAirport: departureAirportU,\n            arrivalAirport: arrivalAirportU,\n            baggage: baggageU,\n            tripDuration: tripDurationU,\n            price: priceU,\n          };\n          Object.keys(val).forEach(\n            (k) => !val[k] && val[k] !== undefined && delete val[k]\n          );\n          if (flightNumberU != null && flightNumberU <= 0) {\n            alert(\"Flight number must be positive!!!\");\n          } else if (priceU != null && priceU <= 0) {\n            alert(\"Price number must be positive!!!\");\n          } else if (economySeatsU != null && economySeatsU <= 0) {\n            alert(\"Ecnonomy seats must be more than 0 !!!\");\n          } else if (businessSeatsU != null && businessSeatsU <= 0) {\n            alert(\"Business seats number cannot be more than 0 !!!\");\n          } else if (baggageU != null && baggageU <= 0) {\n            alert(\"Baggage number must be positive!!!\");\n          } else if (\n            (departureDateU != null\n              ? departureDateU\n              : result.data.departureDate) >\n            (arrivalDateU != null ? arrivalDateU : result.data.arrivalDate)\n          ) {\n            alert(\"Departure date can't be after Arrival date!!!\");\n          } else if (\n            (departureDateU != null\n              ? departureDateU\n              : result.data.departureDate) ==\n              (arrivalDateU != null ? arrivalDateU : result.data.arrivalDate) &&\n            (departureTimeU != null\n              ? departureTimeU\n              : result.data.departureTime) >=\n              (arrivalTimeU != null ? arrivalTimeU : result.data.arrivalTime)\n          ) {\n            alert(\n              \"Departure time must be before Arrival time if on the same day!!!\"\n            );\n          } else {\n            axios\n              .put(\"http://localhost:8000/admin/updateFlight\", val)\n              .then((result) => {\n                if (result.data == \"Error\") {\n                  alert(\"Flight number already exists!!!\");\n                } else {\n                  setOpenPopupUpdate(false);\n                  setListOfFlights(\n                    listOfFlights.map((val) => {\n                      return val._id == id\n                        ? {\n                            _id: id,\n                            flightNumber:\n                              flightNumberU == null\n                                ? val.flightNumber\n                                : flightNumberU,\n                            departureTime:\n                              departureTimeU == null\n                                ? val.departureTime\n                                : departureTimeU,\n                            arrivalTime:\n                              arrivalTimeU == null\n                                ? val.arrivalTime\n                                : arrivalTimeU,\n                            numberofEconomySeats:\n                              economySeatsU == null\n                                ? val.numberofEconomySeats\n                                : economySeatsU,\n                            arrivalDate:\n                              arrivalDateU == null\n                                ? val.arrivalDate\n                                : arrivalDateU,\n                            departureDate:\n                              departureDateU == null\n                                ? val.departureDate\n                                : departureDateU,\n                            numberofBusinessSeats:\n                              businessSeatsU == null\n                                ? val.numberofBusinessSeats\n                                : businessSeatsU,\n                            departureAirport:\n                              departureAirportU == null\n                                ? val.departureAirport\n                                : departureAirportU,\n                            arrivalAirport:\n                              arrivalAirportU == null\n                                ? val.arrivalAirport\n                                : arrivalAirportU,\n                            baggage: baggageU == null ? val.baggage : baggageU,\n                            tripDuration:\n                              tripDurationU == null\n                                ? val.tripDuration\n                                : tripDurationU,\n                            price: priceU == null ? val.price : priceU,\n                          }\n                        : val;\n                    })\n                  );\n                  setFlightNumberU(null);\n                  setDepartureTimeU(null);\n                  setArrivalTimeU(null);\n                  setDepartureDateU(null);\n                  setArrivalDateU(null);\n                  setEconomySeatsU(null);\n                  setBusinessSeatsU(null);\n                  setDepartureAirportU(null);\n                  setArrivalAirportU(null);\n                  setBaggageU(null);\n                  setTripDurationU(null);\n                  setPrice(null);\n                }\n              });\n          }\n        })\n        .catch((err) => {\n          console.log(err);\n        });\n    }\n  };\n\n  const delFlight = (id) => {\n    if (window.confirm(\"Are you sure to delete this Flight?\")) {\n      axios\n        .delete(`http://localhost:8000/admin/deleteFlight/${id}`)\n        .then(() => {\n          setListOfFlights(\n            listOfFlights.filter((val) => {\n              return val._id != id;\n            })\n          );\n        });\n    }\n  };\n\n  const searchFlight = () => {\n    navigate(\"/admin/search\");\n  };\n\n  useEffect(() => {\n    const listener = (event) => {\n      if (event.code === \"Enter\") {\n        event.preventDefault();\n        if (openPopupCreate == true) {\n          create();\n        }\n        if (openPopupUpdate == true) {\n          updFlight(upID);\n        }\n      }\n      if (event.code === \"Escape\") {\n        event.preventDefault();\n        logout();\n      }\n    };\n    document.addEventListener(\"keydown\", listener);\n    return () => {\n      document.removeEventListener(\"keydown\", listener);\n    };\n  });\n\n  useEffect(() => {\n    axios\n      .get(\"http://localhost:8000/admin/showFlight\")\n      .then((result) => {\n        setListOfFlights(result.data);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }, []);\n\n  return (\n    <div>\n      <div className=\"HeaderContainer\">\n        <div className=\"HeaderButton\">\n          <button onClick={logout}>Logout</button>\n        </div>\n        <div className=\"Home\">\n          <h1>Welcome Admin</h1>\n          <h2>Manage Flights</h2>\n        </div>\n      </div>\n      <div className=\"App\">\n        <div className=\"flightCRUD\">\n          <button onClick={searchFlight}>Search Flights</button>\n          <button id=\"createB\" onClick={() => setOpenPopupCreate(true)}>\n            + Add Flight\n          </button>\n        </div>\n      </div>\n      <div className=\"listOfFlights\">\n        {listOfFlights.map((val) => {\n          return (\n            <div className=\"flightContainer\">\n              <div>\n                <div className=\"flight\">\n                  <h3 id=\"fliNumber\">\n                    Flight Number: <br />\n                    {val.flightNumber}\n                  </h3>\n                  <h3>\n                    Departure Time: <br />\n                    {val.departureTime}\n                  </h3>\n                  <h3>\n                    Departure Date: <br />\n                    {val.departureDate}\n                  </h3>\n                  <h3>\n                    Arrival Time: <br />\n                    {val.arrivalTime}\n                  </h3>\n                  <h3>\n                    Arrival Date: <br />\n                    {val.arrivalDate}\n                  </h3>\n                  <h3>\n                    Trip Duration: <br />\n                    {val.tripDuration + \" Hours\"}\n                  </h3>\n                </div>\n                <div className=\"flight\">\n                  <h3 id=\"fliNumber\">\n                    Economy Seats: <br />\n                    {val.numberofEconomySeats}\n                  </h3>\n                  <h3>\n                    Business Seats: <br />\n                    {val.numberofBusinessSeats}\n                  </h3>\n                  <h3>\n                    Departure Airport: <br />\n                    {val.departureAirport}\n                  </h3>\n                  <h3>\n                    Arrival Airport: <br />\n                    {val.arrivalAirport}\n                  </h3>\n                  <h3>\n                    Baggage Allowance: <br />\n                    {val.baggage + \" Bags\"}\n                  </h3>\n                  <h3>\n                    Price: <br />\n                    {val.price + \" L.E\"}\n                  </h3>\n                </div>\n              </div>\n              <button\n                onClick={() => {\n                  setUpID(val._id);\n                  setOpenPopupUpdate(true);\n                }}\n              >\n                Update\n              </button>\n              <button\n                id=\"delB\"\n                onClick={() => {\n                  delFlight(val._id);\n                }}\n              >\n                Delete\n              </button>\n            </div>\n          );\n        })}\n      </div>\n      <Dialog open={openPopupCreate} maxWidth=\"lg\">\n        <DialogTitle>\n          <div className=\"PopupHeader\">\n            Create Flight\n            <button onClick={() => setOpenPopupCreate(false)}>Close</button>\n          </div>\n        </DialogTitle>\n        <DialogContent dividers>\n          <div className=\"Popupinputs\">\n            <div className=\"PopupinputsSub\">\n              <div>\n                Flight Number\n                <input\n                  type=\"number\"\n                  placeholder=\"Flight Number\"\n                  onChange={(event) => {\n                    setFlightNumber(event.target.value);\n                  }}\n                />\n                Trip Duration\n                <input\n                  type=\"number\"\n                  placeholder=\"Trip Duration\"\n                  onChange={(event) => {\n                    setTripDuration(event.target.value);\n                  }}\n                />\n              </div>\n              <div>\n                Departure Airport\n                <input\n                  type=\"text\"\n                  placeholder=\"Departure Airport\"\n                  onChange={(event) => {\n                    setDepartureAirport(event.target.value);\n                  }}\n                />\n                Arrival Airport\n                <input\n                  type=\"text\"\n                  placeholder=\"Arrival Airport\"\n                  onChange={(event) => {\n                    setArrivalAirport(event.target.value);\n                  }}\n                />\n              </div>\n              <div>\n                Departure Time\n                <input\n                  type=\"time\"\n                  onChange={(event) => {\n                    setDepartureTime(event.target.value);\n                  }}\n                />\n                Arrival Time\n                <input\n                  type=\"time\"\n                  onChange={(event) => {\n                    setArrivalTime(event.target.value);\n                  }}\n                />\n              </div>\n              <div>\n                Departure Date\n                <input\n                  type=\"date\"\n                  onChange={(event) => {\n                    setDepartureDate(event.target.value);\n                  }}\n                />\n                Arrival Date\n                <input\n                  type=\"date\"\n                  onChange={(event) => {\n                    setArrivalDate(event.target.value);\n                  }}\n                />\n              </div>\n              <div>\n                Economy Seats\n                <input\n                  type=\"number\"\n                  placeholder=\"Economy Seats\"\n                  onChange={(event) => {\n                    setEconomySeats(event.target.value);\n                  }}\n                />\n                Business Seats\n                <input\n                  type=\"number\"\n                  placeholder=\"Business Seats\"\n                  onChange={(event) => {\n                    setBusinessSeats(event.target.value);\n                  }}\n                />\n              </div>\n              <div>\n                Baggage\n                <input\n                  type=\"number\"\n                  placeholder=\"Baggage\"\n                  onChange={(event) => {\n                    setBaggage(event.target.value);\n                  }}\n                />\n                Price\n                <input\n                  type=\"number\"\n                  placeholder=\"Price\"\n                  onChange={(event) => {\n                    setPrice(event.target.value);\n                  }}\n                />\n              </div>\n            </div>\n            <button onClick={create}>Create</button>\n          </div>\n        </DialogContent>\n      </Dialog>\n      <Dialog open={openPopupUpdate} maxWidth=\"lg\">\n        <DialogTitle>\n          <div className=\"PopupHeader\">\n            Update Flight\n            <button onClick={() => setOpenPopupUpdate(false)}>Close</button>\n          </div>\n        </DialogTitle>\n        <DialogContent dividers>\n          <div className=\"Popupinputs\">\n            <div className=\"PopupinputsSub\">\n              <div>\n                Flight Number\n                <input\n                  type=\"number\"\n                  placeholder=\"Flight Number\"\n                  onChange={(event) => {\n                    setFlightNumberU(event.target.value);\n                  }}\n                />\n                Trip Duration\n                <input\n                  type=\"number\"\n                  placeholder=\"Trip Duration\"\n                  onChange={(event) => {\n                    setTripDurationU(event.target.value);\n                  }}\n                />\n              </div>\n              <div>\n                Departure Airport\n                <input\n                  type=\"text\"\n                  placeholder=\"Departure Airport\"\n                  onChange={(event) => {\n                    setDepartureAirportU(event.target.value);\n                  }}\n                />\n                Arrival Airport\n                <input\n                  type=\"text\"\n                  placeholder=\"Arrival Airport\"\n                  onChange={(event) => {\n                    setArrivalAirportU(event.target.value);\n                  }}\n                />\n              </div>\n              <div>\n                Departure Time\n                <input\n                  type=\"time\"\n                  onChange={(event) => {\n                    setDepartureTimeU(event.target.value);\n                  }}\n                />\n                Arrival Time\n                <input\n                  type=\"time\"\n                  onChange={(event) => {\n                    setArrivalTimeU(event.target.value);\n                  }}\n                />\n              </div>\n              <div>\n                Departure Date\n                <input\n                  type=\"date\"\n                  onChange={(event) => {\n                    setDepartureDateU(event.target.value);\n                  }}\n                />\n                Arrival Date\n                <input\n                  type=\"date\"\n                  onChange={(event) => {\n                    setArrivalDateU(event.target.value);\n                  }}\n                />\n              </div>\n              <div>\n                Economy Seats\n                <input\n                  type=\"number\"\n                  placeholder=\"Economy Seats\"\n                  onChange={(event) => {\n                    setEconomySeatsU(event.target.value);\n                  }}\n                />\n                Business Seats\n                <input\n                  type=\"number\"\n                  placeholder=\"Business Seats\"\n                  onChange={(event) => {\n                    setBusinessSeatsU(event.target.value);\n                  }}\n                />\n              </div>\n              <div>\n                Baggage\n                <input\n                  type=\"number\"\n                  placeholder=\"Baggage\"\n                  onChange={(event) => {\n                    setBaggageU(event.target.value);\n                  }}\n                />\n                Price\n                <input\n                  type=\"number\"\n                  placeholder=\"Price\"\n                  onChange={(event) => {\n                    setPriceU(event.target.value);\n                  }}\n                />\n              </div>\n            </div>\n            <button\n              onClick={() => {\n                updFlight(upID);\n              }}\n            >\n              Update\n            </button>\n          </div>\n        </DialogContent>\n      </Dialog>\n    </div>\n  );\n}\n\nexport default CreateFlight;\n","/Users/abdulrahman_dahrawy/Documents/GitHub/Bread-Board/src/Components/ReserveFlights.js",["122","123","124","125","126","127","128","129","130"],"import { useState, useEffect } from \"react\";\nimport { useNavigate } from \"react-router\";\nimport axios from \"axios\";\nimport \"../App.css\";\nimport { Button, Dialog } from \"@material-ui/core\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport Seats from \"./Seats\";\n\nimport StripeContainer from \"./StripeContainer\";\n\nfunction ReserveFlights() {\n  const navigate = useNavigate();\n\n  const [adults, setAdults] = useState(0);\n  const [children, setChildren] = useState(0);\n  const [departureAirport, setDepartureAirport] = useState(null);\n  const [arrivalAirport, setArrivalAirport] = useState(null);\n  const [departureDate, setDepartureDate] = useState(null);\n  const [returnDate, setReturnDate] = useState(null);\n  const [cabin, setCabin] = useState(\"numberofEconomySeats\");\n\n  const [listOfFlights, setListOfFlights] = useState([]);\n\n  const [depFli, setDepFli] = useState(\"departure\");\n\n  const [openPopupMore, setOpenPopupMore] = useState(false);\n  const [openPopupSum, setOpenPopupSum] = useState(false);\n  const [openPopupPay, setOpenPopupPay] = useState(false);\n\n  const [flightID, setFlightID] = useState(null);\n\n  const [depID, setDepID] = useState(null);\n  const [depFlightNumber, setDepFlightNumber] = useState(null);\n  const [depDepartureTime, setDepDepartureTime] = useState(null);\n  const [depArrivalTime, setDepArrivalTime] = useState(null);\n  const [depEconomySeats, setDepEconomySeats] = useState(null);\n  const [depArrivalDate, setDepArrivalDate] = useState(null);\n  const [depDepartureDate, setDepDepartureDate] = useState(null);\n  const [depBusinessSeats, setDepBusinessSeats] = useState(null);\n  const [depDepartureAirport, setDepDepartureAirport] = useState(null);\n  const [depArrivalAirport, setDepArrivalAirport] = useState(null);\n  const [depBaggage, setDepBaggage] = useState(null);\n  const [depTripDuration, setDepTripDuration] = useState(null);\n  const [depPrice, setDepPrice] = useState(null);\n\n  const [arrID, setArrID] = useState(null);\n  const [arrFlightNumber, setArrFlightNumber] = useState(null);\n  const [arrDepartureTime, setArrDepartureTime] = useState(null);\n  const [arrArrivalTime, setArrArrivalTime] = useState(null);\n  const [arrEconomySeats, setArrEconomySeats] = useState(null);\n  const [arrArrivalDate, setArrArrivalDate] = useState(null);\n  const [arrDepartureDate, setArrDepartureDate] = useState(null);\n  const [arrBusinessSeats, setArrBusinessSeats] = useState(null);\n  const [arrDepartureAirport, setArrDepartureAirport] = useState(null);\n  const [arrArrivalAirport, setArrArrivalAirport] = useState(null);\n  const [arrBaggage, setArrBaggage] = useState(null);\n  const [arrTripDuration, setArrTripDuration] = useState(null);\n  const [arrPrice, setArrPrice] = useState(null);\n\n  const [confirmed, setConfirmed] = useState(false);\n  const [step, setStep] = useState(0);\n  const [depSeats, setDepSeats] = useState([]);\n  const [retSeats, setRetSeats] = useState([]);\n  const [reservePopup, setReservePopup] = useState(false);\n  const [reserveId, setReserveId] = useState(null);\n  const [totalPrice, setTotalPrice] = useState(null);\n\n  const home = () => {\n    navigate(-1);\n  };\n\n  const searchFlight = () => {\n    if (\n      adults == null ||\n      children == null ||\n      departureDate == null ||\n      returnDate == null ||\n      departureAirport == null ||\n      arrivalAirport == null\n    ) {\n      alert(\"Please fill all fields!!!\");\n    } else if (adults <= 0 && children <= 0) {\n      alert(\"please select a valid number of passengers !!!\");\n    } else if (adults < 0 || children < 0) {\n      alert(\"number of passenegers cannot be less than 0 !!!\");\n    } else if (departureDate > returnDate) {\n      alert(\"Please enter a valid return/arrival date !!!\");\n    } else {\n      var val = {\n        adults: adults,\n        children: children,\n        departureAirport: departureAirport,\n        arrivalAirport: arrivalAirport,\n        departureDate: departureDate,\n        returnDate: returnDate,\n        cabin: cabin,\n      };\n      axios\n        .post(\"http://localhost:8000/admin/departureFlights\", val)\n        .then((result) => {\n          if (result.data.length == 0) {\n            alert(\n              \"There are no flights available with required search criteria!!\"\n            );\n          }\n          setListOfFlights(result.data);\n        })\n        .catch((err) => {\n          console.log(err);\n        });\n    }\n    setDepFli(\"departure\");\n    setDepFlightNumber(null);\n    setArrFlightNumber(null);\n    setConfirmed(false);\n  };\n\n  const chooseDep = (fli) => {\n    if (depFlightNumber == null) {\n      setDepID(fli._id);\n      setDepFlightNumber(fli.flightNumber);\n      setDepDepartureTime(fli.departureTime);\n      setDepArrivalTime(fli.arrivalTime);\n      setDepEconomySeats(fli.numberofEconomySeats);\n      setDepArrivalDate(fli.arrivalDate);\n      setDepDepartureDate(fli.departureDate);\n      setDepBusinessSeats(fli.numberofBusinessSeats);\n      setDepDepartureAirport(fli.departureAirport);\n      setDepArrivalAirport(fli.arrivalAirport);\n      setDepBaggage(fli.baggage);\n      setDepTripDuration(fli.tripDuration);\n      setDepPrice(fli.price);\n      setDepFli(\"return\");\n      var val = {\n        adults: adults,\n        children: children,\n        departureAirport: departureAirport,\n        arrivalAirport: arrivalAirport,\n        departureDate: departureDate,\n        returnDate: returnDate,\n        cabin: cabin,\n      };\n      axios\n        .post(\"http://localhost:8000/admin/returnFlights\", val)\n        .then((result) => {\n          setListOfFlights(result.data);\n        })\n        .catch((err) => {\n          console.log(err);\n        });\n    } else {\n      setArrID(fli._id);\n      setArrFlightNumber(fli.flightNumber);\n      setArrDepartureTime(fli.departureTime);\n      setArrArrivalTime(fli.arrivalTime);\n      setArrEconomySeats(fli.numberofEconomySeats);\n      setArrArrivalDate(fli.arrivalDate);\n      setArrDepartureDate(fli.departureDate);\n      setArrBusinessSeats(fli.numberofBusinessSeats);\n      setArrDepartureAirport(fli.departureAirport);\n      setArrArrivalAirport(fli.arrivalAirport);\n      setArrBaggage(fli.baggage);\n      setArrTripDuration(fli.tripDuration);\n      setArrPrice(fli.price);\n      setOpenPopupSum(true);\n    }\n  };\n\n  const reserve = () => {\n    setTotalPrice(\n      (Number(children) + Number(adults)) * Number(depPrice + arrPrice)\n    );\n    if (\n      window.confirm(\n        \"The price would be \" +\n          (Number(children) + Number(adults)) * Number(depPrice + arrPrice) +\n          \". Would you like to continue with the payment?\"\n      )\n    ) {\n      setOpenPopupPay(true);\n    }\n  };\n\n  useEffect(() => {\n    const listener = (event) => {\n      if (event.code === \"Enter\") {\n        event.preventDefault();\n        searchFlight();\n      }\n      if (event.code === \"Escape\") {\n        event.preventDefault();\n        home();\n      }\n    };\n    document.addEventListener(\"keydown\", listener);\n    return () => {\n      document.removeEventListener(\"keydown\", listener);\n    };\n  });\n\n  return (\n    <div>\n      <div className=\"HeaderContainer\">\n        <div className=\"HeaderButton\">\n          <button onClick={home}>Back</button>\n        </div>\n        <div className=\"SearchFlight\">\n          <h1>Search Flights</h1>\n        </div>\n      </div>\n      <div className=\"App\">\n        <div className=\"Reserveinputs\">\n          <div className=\"ReserveinputsSub\">\n            <div>\n              Number Of Children\n              <input\n                type=\"number\"\n                placeholder=\"Number Of Children\"\n                onChange={(event) => {\n                  setChildren(event.target.value);\n                }}\n              />\n              Number Of Adults\n              <input\n                type=\"number\"\n                placeholder=\"Number Of Adults\"\n                onChange={(event) => {\n                  setAdults(event.target.value);\n                }}\n              />\n              Departure Airport\n              <input\n                type=\"text\"\n                placeholder=\"Departure Airport\"\n                onChange={(event) => {\n                  setDepartureAirport(event.target.value);\n                }}\n              />\n            </div>\n            <div>\n              Arrival Airport\n              <input\n                type=\"text\"\n                placeholder=\"Arrival Airport\"\n                onChange={(event) => {\n                  setArrivalAirport(event.target.value);\n                }}\n              />\n              Departure Date\n              <input\n                type=\"date\"\n                onChange={(event) => {\n                  setDepartureDate(event.target.value);\n                }}\n              />\n              Return Date\n              <input\n                type=\"date\"\n                onChange={(event) => {\n                  setReturnDate(event.target.value);\n                }}\n              />\n            </div>\n            <div className=\"cabinButtons\">\n              <label className=\"cabinButtons1\">\n                Economy Seats :\n                <input\n                  type=\"radio\"\n                  name=\"cabinClass\"\n                  value=\"numberofEconomySeats\"\n                  checked={cabin === \"numberofEconomySeats\"}\n                  onChange={() => setCabin(\"numberofEconomySeats\")}\n                />\n              </label>\n              <label className=\"cabinButtons2\">\n                Business Seats :\n                <input\n                  type=\"radio\"\n                  name=\"cabinClass\"\n                  value=\"numberofBusinessSeats\"\n                  checked={cabin === \"numberofBusinessSeats\"}\n                  onChange={() => setCabin(\"numberofBusinessSeats\")}\n                />\n              </label>\n            </div>\n          </div>\n          <button onClick={searchFlight}>Submit</button>\n        </div>\n      </div>\n      <div className=\"listOfFlights\">\n        Choose a {depFli} flight from the below list\n        {listOfFlights.map((val) => {\n          return (\n            <div className=\"flightContainerRes\">\n              <div className=\"flightRes\">\n                <h3 id=\"fliNumber\">\n                  Flight Number: <br />\n                  {val.flightNumber}\n                </h3>\n                <h3>\n                  Departure Time: <br />\n                  {val.departureTime}\n                </h3>\n                <h3>\n                  Arrival Time: <br />\n                  {val.arrivalTime}\n                </h3>\n                <h3>\n                  Trip Duration: <br />\n                  {val.tripDuration + \" Hours\"}\n                </h3>\n                <h3>\n                  Baggage Allowance: <br />\n                  {val.baggage + \" Bags\"}\n                </h3>\n                <h3>\n                  Price: <br />\n                  {val.price + \" L.E\"}\n                </h3>\n              </div>\n              <button\n                onClick={() => {\n                  setFlightID(val._id);\n                  setOpenPopupMore(true);\n                }}\n              >\n                More Info\n              </button>\n              <button\n                id=\"chooseB\"\n                onClick={() => {\n                  chooseDep(val);\n                }}\n              >\n                Choose\n              </button>\n            </div>\n          );\n        })}\n      </div>\n      <Dialog open={openPopupMore} maxWidth=\"lg\">\n        <DialogTitle>\n          <div className=\"PopupHeaderRes\">\n            Flight Info\n            <button onClick={() => setOpenPopupMore(false)}>Close</button>\n          </div>\n        </DialogTitle>\n        <DialogContent dividers>\n          {listOfFlights.map((val) => {\n            if (val._id == flightID) {\n              return (\n                <div>\n                  <div className=\"flightPopup\">\n                    <h3 id=\"fliNumber\">\n                      Flight Number: <br />\n                      {val.flightNumber}\n                    </h3>\n                    <h3>\n                      Departure Time: <br />\n                      {val.departureTime}\n                    </h3>\n                    <h3>\n                      Departure Date: <br />\n                      {val.departureDate}\n                    </h3>\n                    <h3>\n                      Arrival Time: <br />\n                      {val.arrivalTime}\n                    </h3>\n                    <h3>\n                      Arrival Date: <br />\n                      {val.arrivalDate}\n                    </h3>\n                    <h3>\n                      Trip Duration: <br />\n                      {val.tripDuration + \" Hours\"}\n                    </h3>\n                  </div>\n                  <div className=\"flightPopup\">\n                    <h3 id=\"fliNumber\">\n                      Economy Seats: <br />\n                      {val.numberofEconomySeats}\n                    </h3>\n                    <h3>\n                      Business Seats: <br />\n                      {val.numberofBusinessSeats}\n                    </h3>\n                    <h3>\n                      Departure Airport: <br />\n                      {val.departureAirport}\n                    </h3>\n                    <h3>\n                      Arrival Airport: <br />\n                      {val.arrivalAirport}\n                    </h3>\n                    <h3>\n                      Baggage Allowance: <br />\n                      {val.baggage + \" Bags\"}\n                    </h3>\n                    <h3>\n                      Price: <br />\n                      {val.price + \" L.E\"}\n                    </h3>\n                  </div>\n                </div>\n              );\n            }\n          })}\n        </DialogContent>\n      </Dialog>\n      <Dialog open={openPopupSum} maxWidth=\"lg\">\n        <DialogTitle>\n          <div className=\"PopupHeaderRes\">\n            Ticket Summary\n            <button\n              onClick={() => {\n                setOpenPopupSum(false);\n                setConfirmed(false);\n                setStep(0);\n              }}\n            >\n              Close\n            </button>\n          </div>\n        </DialogTitle>\n        <DialogContent dividers>\n          <div>\n            <div className=\"flightPopup\">\n              <h3 id=\"fliNumber\">\n                Flight Number: <br />\n                {depFlightNumber}\n              </h3>\n              <h3>\n                Departure Time: <br />\n                {depDepartureTime}\n              </h3>\n              <h3>\n                Departure Date: <br />\n                {depDepartureDate}\n              </h3>\n              <h3>\n                Arrival Time: <br />\n                {depArrivalTime}\n              </h3>\n              <h3>\n                Arrival Date: <br />\n                {depArrivalDate}\n              </h3>\n              <h3>\n                Trip Duration: <br />\n                {depTripDuration + \" Hours\"}\n              </h3>\n            </div>\n            <div className=\"flightPopup\">\n              <h3>\n                Departure Airport: <br />\n                {depDepartureAirport}\n              </h3>\n              <h3>\n                Arrival Airport: <br />\n                {depArrivalAirport}\n              </h3>\n              <h3>\n                Price: <br />\n                {depPrice + \" L.E\"}\n              </h3>\n            </div>\n          </div>\n          <br></br>\n          <div>\n            <div className=\"flightPopup\">\n              <h3 id=\"fliNumber\">\n                Flight Number: <br />\n                {arrFlightNumber}\n              </h3>\n              <h3>\n                Departure Time: <br />\n                {arrDepartureTime}\n              </h3>\n              <h3>\n                Departure Date: <br />\n                {arrDepartureDate}\n              </h3>\n              <h3>\n                Arrival Time: <br />\n                {arrArrivalTime}\n              </h3>\n              <h3>\n                Arrival Date: <br />\n                {arrArrivalDate}\n              </h3>\n              <h3>\n                Trip Duration: <br />\n                {arrTripDuration + \" Hours\"}\n              </h3>\n            </div>\n            <div className=\"flightPopup\">\n              <h3>\n                Departure Airport: <br />\n                {arrDepartureAirport}\n              </h3>\n              <h3>\n                Arrival Airport: <br />\n                {arrArrivalAirport}\n              </h3>\n              <h3>\n                Price: <br />\n                {arrPrice + \" L.E\"}\n              </h3>\n            </div>\n            <div>\n              Total Price:{\" \"}\n              {(Number(children) + Number(adults)) *\n                Number(depPrice + arrPrice)}\n            </div>\n          </div>\n          <div style={{ width: \"100%\", textAlign: \"center\" }}>\n            <Button\n              style={{ margin: \"5vh 0\" }}\n              variant=\"outlined\"\n              onClick={() => {\n                reserve();\n              }}\n            >\n              Reserve Flight\n            </Button>\n          </div>\n          {confirmed && !reservePopup && (\n            <>\n              <div style={{ textAlign: \"center\" }}>\n                Please Reserve {step === 0 ? \"Departure\" : \"Return\"} Flight\n                Seats{\" \"}\n              </div>\n              <Seats\n                flight={{\n                  id: step === 0 ? depFlightNumber : arrFlightNumber,\n                  seats:\n                    step === 0\n                      ? cabin === \"numberofEconomySeats\"\n                        ? depEconomySeats\n                        : depBusinessSeats\n                      : cabin === \"numberofEconomySeats\"\n                      ? arrEconomySeats\n                      : arrBusinessSeats,\n                  people: Number(adults) + Number(children),\n                  cabin:\n                    cabin === \"numberofEconomySeats\" ? \"Economy\" : \"Business\",\n                }}\n                done={(reservedSeats) => {\n                  if (step === 1) {\n                    axios\n                      .post(\"http://localhost:8000/admin/reserve\", {\n                        user: window.localStorage.getItem(\"user\"),\n                        departureFlight: depFlightNumber,\n                        returnFlight: arrFlightNumber,\n                        cabin:\n                          cabin === \"numberofEconomySeats\"\n                            ? \"Economy\"\n                            : \"Business\",\n                        departureSeats: depSeats,\n                        returnSeats: reservedSeats,\n                        price:\n                          (Number(adults) + Number(children)) *\n                          (depPrice + arrPrice),\n                        departurePrice: depPrice,\n                        returnPrice: arrPrice,\n                      })\n                      .then((result) => {\n                        if (result.data.message == \"Your Session Expired\") {\n                          alert(result.data.message);\n                          navigate(\"/\");\n                        } else if (result.data.message == \"Error\") {\n                          alert(result.data.message);\n                        } else {\n                          setReserveId(result.data.reserve._id);\n                        }\n                      });\n                    setRetSeats(reservedSeats);\n                    setOpenPopupSum(false);\n                    setReservePopup(true);\n                    setStep(0);\n                  } else {\n                    setDepSeats(reservedSeats);\n                    setStep(1);\n                  }\n                }}\n              />\n            </>\n          )}\n        </DialogContent>\n      </Dialog>\n      <Dialog open={reservePopup} maxWidth=\"lg\">\n        <DialogTitle>\n          <div className=\"PopupHeaderRes\">\n            Reservation Summary\n            <button onClick={() => setReservePopup(false)}>Close</button>\n          </div>\n        </DialogTitle>\n        <DialogContent dividers>\n          <div>\n            Booking number:{\" \"}\n            <span style={{ fontWeight: \"800\" }}>{reserveId}</span>\n          </div>\n          <div>\n            Cabin:{\" \"}\n            <span style={{ fontWeight: \"800\" }}>\n              {cabin === \"numberofEconomySeats\" ? \"Economy\" : \"Business\"} Class\n            </span>\n          </div>\n          <div>\n            Price:{\" \"}\n            <span style={{ fontWeight: \"800\" }}>\n              {(Number(adults) + Number(children)) * (depPrice + arrPrice)}\n            </span>\n          </div>\n          <div>\n            Departure Seats:{\" \"}\n            <span style={{ fontWeight: \"800\" }}>{depSeats.join(\" - \")}</span>\n          </div>\n          <div>\n            Return Seats:{\" \"}\n            <span style={{ fontWeight: \"800\" }}>{retSeats.join(\" - \")}</span>\n          </div>\n          <div>\n            Departure Date:{\" \"}\n            <span style={{ fontWeight: \"800\" }}>{depDepartureDate}</span>\n          </div>\n          <div>\n            Departure Time:{\" \"}\n            <span style={{ fontWeight: \"800\" }}>{depDepartureTime}</span>\n          </div>\n          <div>\n            Return Date:{\" \"}\n            <span style={{ fontWeight: \"800\" }}>{arrArrivalDate}</span>\n          </div>\n          <div>\n            Return Time:{\" \"}\n            <span style={{ fontWeight: \"800\" }}>{arrArrivalTime}</span>\n          </div>\n        </DialogContent>\n      </Dialog>\n      <Dialog open={openPopupPay} maxWidth=\"lg\">\n        <DialogTitle>\n          <div className=\"PopupHeaderRes\">\n            Pay\n            <button\n              onClick={() => {\n                setOpenPopupPay(false);\n              }}\n            >\n              Close\n            </button>\n          </div>\n        </DialogTitle>\n        <DialogContent dividers>\n          <StripeContainer\n            amount={totalPrice * 100}\n            setConfirmed={setConfirmed}\n            setOpenPopupPay={setOpenPopupPay}\n          />\n        </DialogContent>\n      </Dialog>\n    </div>\n  );\n}\n\nexport default ReserveFlights;\n","/Users/abdulrahman_dahrawy/Documents/GitHub/Bread-Board/src/Components/EditPassword.js",["131","132","133","134","135","136","137","138","139"],"import { useState, useEffect } from \"react\";\nimport { useNavigate } from \"react-router\";\nimport axios from \"axios\";\nimport \"../App.css\";\nimport { Dialog } from \"@material-ui/core\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\n\nfunction UpdatePasswword() {\n  const navigate = useNavigate();\n\n  const [oldPassword, setOldPassword] = useState(\"\");\n  const [newPassword, setNewPassword] = useState(\"\");\n  const [confirmNewPassword, setConfirmNewPassword] = useState(\"\");\n\n  const back = () => {\n    navigate(-1);\n  };\n\n  const updateInfo = () => {\n    if (oldPassword == \"\" || newPassword == \"\" || confirmNewPassword == \"\") {\n      alert(\"Please fill all fields!!!\");\n    } else if (newPassword != confirmNewPassword) {\n      alert(\"Passwords don't match\");\n    } else {\n      if (window.confirm(\"Are you sure to change your password?\")) {\n        var val = {\n          email: window.localStorage.getItem(\"user\"),\n          oldPassword: oldPassword,\n          password: newPassword,\n        };\n        axios\n          .put(\"http://localhost:8000/admin/updatePassword\", val)\n          .then((result) => {\n            if (result.data.message == \"Your Session Expired\") {\n              alert(result.data.message);\n              navigate(\"/\");\n            } else if (result.data.message == \"Success\") {\n              alert(\"Updated Succesfully\");\n              navigate(-1);\n            } else {\n              alert(result.data.message);\n            }\n          });\n      }\n    }\n  };\n\n  useEffect(() => {\n    const listener = (event) => {\n      if (event.code === \"Enter\") {\n        event.preventDefault();\n        updateInfo();\n      }\n      if (event.code === \"Escape\") {\n        event.preventDefault();\n        back();\n      }\n    };\n    document.addEventListener(\"keydown\", listener);\n    return () => {\n      document.removeEventListener(\"keydown\", listener);\n    };\n  });\n\n  return (\n    <div>\n      <div className=\"HeaderContainer\">\n        <div className=\"HeaderButton\">\n          <button onClick={back}>Back</button>\n        </div>\n        <div className=\"EditPassword\">\n          <h1>Edit Password</h1>\n        </div>\n      </div>\n      <div className=\"App\">\n        <div className=\"Passwordinputs\">\n          <div>\n            Old Password\n            <input\n              type=\"password\"\n              placeholder=\"Old Password\"\n              onChange={(event) => {\n                setOldPassword(event.target.value);\n              }}\n            />\n            New Password\n            <input\n              type=\"password\"\n              placeholder=\"New Password\"\n              onChange={(event) => {\n                setNewPassword(event.target.value);\n              }}\n            />\n            Confirm new Password\n            <input\n              type=\"password\"\n              placeholder=\"New Password\"\n              onChange={(event) => {\n                setConfirmNewPassword(event.target.value);\n              }}\n            />\n          </div>\n          <button onClick={updateInfo}>Change Password</button>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default UpdatePasswword;\n","/Users/abdulrahman_dahrawy/Documents/GitHub/Bread-Board/src/Components/UserReserves.js",["140","141","142","143","144","145","146","147","148","149","150","151","152","153","154","155","156"],"import axios from \"axios\";\nimport { useEffect, useState } from \"react\";\nimport { useNavigate } from \"react-router\";\nimport { API_URL } from \"../constants\";\nimport { Button, Dialog } from \"@material-ui/core\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport Seats from \"./Seats\";\n\nimport StripeContainer from \"./StripeContainer\";\n\nfunction UserReserves() {\n  const navigate = useNavigate();\n\n  const [flights, setFlights] = useState(null);\n  const [openPopupDep, setOpenPopupDep] = useState(false);\n  const [openPopupRet, setOpenPopupRet] = useState(false);\n  const [resID, setResID] = useState(null);\n\n  const [listOfFlights, setListOfFlights] = useState([]);\n  const [flightID, setFlightID] = useState(null);\n\n  const [depFlightNumber, setDepFlightNumber] = useState(null);\n  const [depDepartureTime, setDepDepartureTime] = useState(null);\n  const [depArrivalTime, setDepArrivalTime] = useState(null);\n  const [depEconomySeats, setDepEconomySeats] = useState(null);\n  const [depArrivalDate, setDepArrivalDate] = useState(null);\n  const [depDepartureDate, setDepDepartureDate] = useState(null);\n  const [depDepartureAirport, setDepDepartureAirport] = useState(null);\n  const [depArrivalAirport, setDepArrivalAirport] = useState(null);\n  const [depBaggage, setDepBaggage] = useState(null);\n  const [depTripDuration, setDepTripDuration] = useState(null);\n  const [depPrice, setDepPrice] = useState(null);\n  const [depBusinessSeats, setDepBusinessSeats] = useState(null);\n\n  const [arrFlightNumber, setArrFlightNumber] = useState(null);\n  const [arrDepartureTime, setArrDepartureTime] = useState(null);\n  const [arrArrivalTime, setArrArrivalTime] = useState(null);\n  const [arrEconomySeats, setArrEconomySeats] = useState(null);\n  const [arrArrivalDate, setArrArrivalDate] = useState(null);\n  const [arrDepartureDate, setArrDepartureDate] = useState(null);\n  const [arrDepartureAirport, setArrDepartureAirport] = useState(null);\n  const [arrArrivalAirport, setArrArrivalAirport] = useState(null);\n  const [arrBaggage, setArrBaggage] = useState(null);\n  const [arrTripDuration, setArrTripDuration] = useState(null);\n  const [arrPrice, setArrPrice] = useState(null);\n  const [arrBusinessSeats, setArrBusinessSeats] = useState(null);\n\n  const [newFlightNumber, setNewFlightNumber] = useState(null);\n  const [newEconomySeats, setNewEconomySeats] = useState(null);\n  const [newBusinessSeats, setNewBusinessSeats] = useState(null);\n  const [newPrice, setNewPrice] = useState(null);\n  const [newTotalPrice, setNewTotalPrice] = useState(null);\n  const [priceDifference, setPriceDifference] = useState(null);\n\n  const [openPopupSeats, setOpenPopupSeats] = useState(false);\n  const [openPopupFlight, setOpenPopupFlight] = useState(false);\n  const [openPopupMore, setOpenPopupMore] = useState(false);\n  const [openPopupPay, setOpenPopupPay] = useState(false);\n\n  const [seatNo, setSeatNo] = useState(null);\n  const [cabin, setCabin] = useState(null);\n  const [confirmed, setConfirmed] = useState(false);\n  const [step, setStep] = useState(0);\n\n  const user = window.localStorage.getItem(\"user\");\n\n  const departureFlight = (id) => {\n    var val = {\n      flightNumber: id,\n    };\n    axios\n      .post(\"http://localhost:8000/admin/searchFlightOne\", val)\n      .then((result) => {\n        setDepFlightNumber(result.data.flightNumber);\n        setDepDepartureTime(result.data.departureTime);\n        setDepArrivalTime(result.data.arrivalTime);\n        setDepArrivalDate(result.data.arrivalDate);\n        setDepDepartureDate(result.data.departureDate);\n        setDepDepartureAirport(result.data.departureAirport);\n        setDepArrivalAirport(result.data.arrivalAirport);\n        setDepBaggage(result.data.baggage);\n        setDepTripDuration(result.data.tripDuration);\n        setDepPrice(result.data.price);\n        setDepEconomySeats(result.data.numberofEconomySeats);\n        setDepBusinessSeats(result.data.numberofBusinessSeats);\n\n        setOpenPopupDep(true);\n      });\n  };\n\n  const returnFlight = (id) => {\n    var val = {\n      flightNumber: id,\n    };\n    axios\n      .post(\"http://localhost:8000/admin/searchFlightOne\", val)\n      .then((result) => {\n        setArrFlightNumber(result.data.flightNumber);\n        setArrDepartureTime(result.data.departureTime);\n        setArrArrivalTime(result.data.arrivalTime);\n        setArrArrivalDate(result.data.arrivalDate);\n        setArrDepartureDate(result.data.departureDate);\n        setArrDepartureAirport(result.data.departureAirport);\n        setArrArrivalAirport(result.data.arrivalAirport);\n        setArrBaggage(result.data.baggage);\n        setArrTripDuration(result.data.tripDuration);\n        setArrPrice(result.data.price);\n        setArrEconomySeats(result.data.numberofEconomySeats);\n        setArrBusinessSeats(result.data.numberofBusinessSeats);\n\n        setOpenPopupRet(true);\n      });\n  };\n\n  const fetch = (user) => {\n    axios\n      .post(API_URL + \"/userReserve\", { user })\n      .then((result) => {\n        if (result.data.message == \"Your Session Expired\") {\n          alert(result.data.message);\n          navigate(\"/\");\n        } else if (result.data.message == \"Error\") {\n          alert(result.data.message);\n        } else {\n          setFlights(result.data.reserve);\n        }\n      })\n      .catch((err) => alert(err));\n  };\n\n  const home = () => {\n    navigate(-1);\n  };\n\n  const cancel = (id) => {\n    console.log(id);\n    if (window.confirm(\"Are you sure you will cancel this flight?\")) {\n      axios\n        .put(API_URL + \"/cancelUserReserve/\" + id)\n        .then((res) => {\n          alert(\n            res.data.status === \"Canceled\"\n              ? \"Canceled Successfully\"\n              : \"Error Occurred\"\n          );\n          fetch(user);\n        })\n        .catch((err) => alert(err));\n    }\n  };\n\n  const emailme = (id) => {\n    if (\n      window.confirm(\n        \"Are you sure you want to receive an email about this reservation?\"\n      )\n    ) {\n      axios\n        .post(API_URL + \"/emailmeUserReserve/\" + id)\n        .then((res) => {\n          alert(\"Email sent successfully\");\n          fetch(user);\n        })\n        .catch((err) => alert(err));\n    }\n  };\n\n  const searchFlight = () => {\n    var val = {\n      departureAirport: step === 0 ? depDepartureAirport : arrDepartureAirport,\n      arrivalAirport: step === 0 ? depArrivalAirport : arrArrivalAirport,\n      departureDate: step === 0 ? depDepartureDate : arrDepartureDate,\n      cabin:\n        cabin === \"Economy\" ? \"numberofEconomySeats\" : \"numberofBusinessSeats\",\n      number: seatNo.length,\n    };\n    axios\n      .post(\"http://localhost:8000/admin/flightsChange\", val)\n      .then((result) => {\n        if (result.data.length == 1) {\n          alert(\"There are no other flights in the same date!!\");\n        } else {\n          setListOfFlights(\n            result.data.filter((val) => {\n              return (\n                val.flightNumber !=\n                (step === 0 ? depFlightNumber : arrFlightNumber)\n              );\n            })\n          );\n        }\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n\n  const chooseFlight = (val) => {\n    if (window.confirm(\"Are you sure you want to change flights?\")) {\n      setNewFlightNumber(val.flightNumber);\n      setNewEconomySeats(val.numberofEconomySeats);\n      setNewBusinessSeats(val.numberofBusinessSeats);\n      setNewPrice(val.price);\n\n      axios\n        .post(\"http://localhost:8000/admin/priceOfReservation\", { _id: resID })\n        .then((result) => {\n          var priceTotal = result.data.price;\n          var newPriceTotal =\n            priceTotal - (step === 0 ? depPrice : arrPrice) * seatNo.length;\n          newPriceTotal = newPriceTotal + val.price * seatNo.length;\n          setNewTotalPrice(newPriceTotal);\n          setPriceDifference(newPriceTotal - priceTotal);\n          if (newPriceTotal - priceTotal > 0) {\n            if (\n              window.confirm(\n                \"The new price would be \" +\n                  newPriceTotal +\n                  \". Would you like to continue with a difference of \" +\n                  (newPriceTotal - priceTotal) +\n                  \"?\"\n              )\n            ) {\n              setOpenPopupPay(true);\n            }\n          } else if (newPriceTotal - priceTotal < 0) {\n            if (\n              window.confirm(\n                \"The new price would be \" +\n                  newPriceTotal +\n                  \". Would you like to continue and \" +\n                  (priceTotal - newPriceTotal) +\n                  \" will be refunded to your account?\"\n              )\n            ) {\n              axios\n                .post(\"http://localhost:8000/admin/sendEmailRefund\", {\n                  amount: priceTotal - newPriceTotal,\n                  email: window.localStorage.getItem(\"user\"),\n                })\n                .then((result) => {\n                  if (result.data.message == \"Your Session Expired\") {\n                    alert(result.data.message);\n                    navigate(\"/\");\n                  } else if (\n                    result.data.message === \"Email sent Successfully!!!\"\n                  ) {\n                    alert(\"Amount refunded successfully\");\n                  }\n                })\n                .catch((err) => alert(err));\n              setConfirmed(true);\n            }\n          } else {\n            if (\n              window.confirm(\n                \"The new price is the same as the old price there will be no more charges. please choose your seats.\"\n              )\n            ) {\n              setConfirmed(true);\n            }\n          }\n        });\n    }\n  };\n\n  useEffect(() => {\n    fetch(user);\n  }, [user]);\n\n  if (!flights) return <div>Loading...</div>;\n\n  return (\n    <div>\n      <div className=\"HeaderContainer\">\n        <div className=\"HeaderButton\">\n          <button onClick={home}>Back</button>\n        </div>\n        <div className=\"SearchFlight\">\n          <h1>Reservations</h1>\n        </div>\n      </div>\n      <div className=\"listOfFlights\">\n        {flights.map((val) => (\n          <div className=\"flightContainerRes\">\n            <div className=\"flightResPrice\">\n              <h3>\n                Total Price: <br />\n                {val.price + \" L.E\"}\n              </h3>\n            </div>\n            <div>\n              <div className=\"Res\">\n                <div className=\"flightRess\">\n                  <h3>\n                    Departure Flight: <br />\n                    {val.departureFlight}\n                  </h3>\n                  <h3>\n                    Cabin: <br />\n                    {val.cabin}\n                  </h3>\n                  <h3>\n                    Departure Seats: <br />\n                    {val.departureSeats.join(\" - \")}\n                  </h3>\n                  <h3>\n                    Departure Price: <br />\n                    {val.departurePrice + \" L.E\"}\n                  </h3>\n                </div>\n                <div className=\"flightResEmpty\"></div>\n                <button\n                  id=\"chooseB\"\n                  onClick={() => {\n                    setResID(val._id);\n                    setStep(0);\n                    setCabin(val.cabin);\n                    setSeatNo(val.departureSeats);\n                    departureFlight(val.departureFlight);\n                  }}\n                >\n                  Choose\n                </button>\n              </div>\n              <div className=\"Res\">\n                <div className=\"flightRess\">\n                  <h3>\n                    Return Flight: <br />\n                    {val.returnFlight}\n                  </h3>\n                  <h3>\n                    Cabin: <br />\n                    {val.cabin}\n                  </h3>\n                  <h3>\n                    Return Seats: <br />\n                    {val.returnSeats.join(\" - \")}\n                  </h3>\n                  <h3>\n                    Return Price: <br />\n                    {val.returnPrice + \" L.E\"}\n                  </h3>\n                </div>\n                <div className=\"flightResEmpty\"></div>\n                <button\n                  id=\"chooseB\"\n                  onClick={() => {\n                    setResID(val._id);\n                    setStep(1);\n                    setCabin(val.cabin);\n                    setSeatNo(val.returnSeats);\n                    returnFlight(val.returnFlight);\n                  }}\n                >\n                  Choose\n                </button>\n              </div>\n            </div>\n            <div className=\"reservesButtons\">\n              <button\n                onClick={() => {\n                  cancel(val._id);\n                }}\n              >\n                Cancel\n              </button>\n              <button\n                onClick={() => {\n                  emailme(val._id);\n                }}\n              >\n                Email Me\n              </button>\n            </div>\n          </div>\n        ))}\n      </div>\n      <Dialog open={openPopupDep} maxWidth=\"lg\">\n        <DialogTitle>\n          <div className=\"PopupHeaderRes\">\n            Departure Flight Info\n            <button onClick={() => setOpenPopupDep(false)}>Close</button>\n          </div>\n        </DialogTitle>\n        <DialogContent dividers>\n          <div className=\"PopupResinputs\">\n            {flights.map((val) => {\n              if (val._id == resID) {\n                return (\n                  <div>\n                    <div className=\"flightPopup\">\n                      <h3>\n                        Departure Flight: <br />\n                        {val.departureFlight}\n                      </h3>\n                      <h3>\n                        Cabin: <br />\n                        {val.cabin}\n                      </h3>\n                      <h3>\n                        Departure Seats: <br />\n                        {val.departureSeats.join(\" - \")}\n                      </h3>\n                      <h3>\n                        Departure Airport: <br />\n                        {depDepartureAirport}\n                      </h3>\n                      <h3>\n                        Arrival Airport: <br />\n                        {depArrivalAirport}\n                      </h3>\n                      <h3>\n                        Trip Duration: <br />\n                        {depTripDuration + \" Hours\"}\n                      </h3>\n                    </div>\n                    <div className=\"flightPopup\">\n                      <h3>\n                        Departure Date: <br />\n                        {depDepartureDate}\n                      </h3>\n                      <h3>\n                        Arrival Date: <br />\n                        {depArrivalDate}\n                      </h3>\n                      <h3>\n                        Departure Time: <br />\n                        {depDepartureTime}\n                      </h3>\n                      <h3>\n                        Arrival Time: <br />\n                        {depArrivalTime}\n                      </h3>\n                      <h3>\n                        Baggage: <br />\n                        {depBaggage + \" Bags\"}\n                      </h3>\n                      <h3>\n                        Price: <br />\n                        {depPrice + \" L.E\"}\n                      </h3>\n                    </div>\n                  </div>\n                );\n              }\n            })}\n            <div>\n              <button\n                onClick={() => {\n                  if (\n                    window.confirm(\"Are you sure you want to change seats?\")\n                  ) {\n                    setConfirmed(true);\n                    setOpenPopupSeats(true);\n                  }\n                }}\n              >\n                Edit Seats\n              </button>\n              <button\n                onClick={() => {\n                  searchFlight();\n                  setOpenPopupFlight(true);\n                }}\n              >\n                Change Flight\n              </button>\n            </div>\n          </div>\n        </DialogContent>\n      </Dialog>\n      <Dialog open={openPopupRet} maxWidth=\"lg\">\n        <DialogTitle>\n          <div className=\"PopupHeaderRes\">\n            Return Flight Info\n            <button onClick={() => setOpenPopupRet(false)}>Close</button>\n          </div>\n        </DialogTitle>\n        <DialogContent dividers>\n          <div className=\"PopupResinputs\">\n            {flights.map((val) => {\n              if (val._id == resID) {\n                return (\n                  <div>\n                    <div className=\"flightPopup\">\n                      <h3>\n                        Return Flight: <br />\n                        {val.returnFlight}\n                      </h3>\n                      <h3>\n                        Cabin: <br />\n                        {val.cabin}\n                      </h3>\n                      <h3>\n                        Return Seats: <br />\n                        {val.returnSeats.join(\" - \")}\n                      </h3>\n                      <h3>\n                        Departure Airport: <br />\n                        {arrDepartureAirport}\n                      </h3>\n                      <h3>\n                        Arrival Airport: <br />\n                        {arrArrivalAirport}\n                      </h3>\n                      <h3>\n                        Trip Duration: <br />\n                        {arrTripDuration + \" Hours\"}\n                      </h3>\n                    </div>\n                    <div className=\"flightPopup\">\n                      <h3>\n                        Departure Date: <br />\n                        {arrDepartureDate}\n                      </h3>\n                      <h3>\n                        Arrival Date: <br />\n                        {arrArrivalDate}\n                      </h3>\n                      <h3>\n                        Departure Time: <br />\n                        {arrDepartureTime}\n                      </h3>\n                      <h3>\n                        Arrival Time: <br />\n                        {arrArrivalTime}\n                      </h3>\n                      <h3>\n                        Baggage: <br />\n                        {arrBaggage + \" Bags\"}\n                      </h3>\n                      <h3>\n                        Price: <br />\n                        {arrPrice + \" L.E\"}\n                      </h3>\n                    </div>\n                  </div>\n                );\n              }\n            })}\n            <div>\n              <button\n                onClick={() => {\n                  if (\n                    window.confirm(\"Are you sure you want to change seats?\")\n                  ) {\n                    setConfirmed(true);\n                    setOpenPopupSeats(true);\n                  }\n                }}\n              >\n                Edit Seats\n              </button>\n              <button\n                onClick={() => {\n                  searchFlight();\n                  setOpenPopupFlight(true);\n                }}\n              >\n                Change Flight\n              </button>\n            </div>\n          </div>\n        </DialogContent>\n      </Dialog>\n      <Dialog open={openPopupSeats} maxWidth=\"lg\">\n        <DialogTitle>\n          <div className=\"PopupHeaderRes\">\n            Change Seats\n            <button\n              onClick={() => {\n                setOpenPopupSeats(false);\n                setConfirmed(false);\n              }}\n            >\n              Close\n            </button>\n          </div>\n        </DialogTitle>\n        <DialogContent dividers>\n          {confirmed && (\n            <>\n              <div style={{ textAlign: \"center\" }}>\n                Please Choose {step === 0 ? \"Departure\" : \"Return\"} Flight Seats{\" \"}\n              </div>\n              <Seats\n                flight={{\n                  id: step === 0 ? depFlightNumber : arrFlightNumber,\n                  seats:\n                    step === 0\n                      ? cabin === \"Economy\"\n                        ? depEconomySeats\n                        : depBusinessSeats\n                      : cabin === \"Economy\"\n                      ? arrEconomySeats\n                      : arrBusinessSeats,\n                  people: seatNo.length,\n                  cabin: cabin,\n                }}\n                done={(reservedSeats) => {\n                  if (step === 0) {\n                    axios.put(\n                      \"http://localhost:8000/admin/reserveUpdateSeats\",\n                      {\n                        _id: resID,\n                        departureSeats: reservedSeats,\n                      }\n                    );\n                    setOpenPopupSeats(false);\n                    setFlights(\n                      flights.map((val) => {\n                        return val._id == resID\n                          ? {\n                              _id: val._id,\n                              user: val.user,\n                              departureFlight: val.departureFlight,\n                              returnFlight: val.returnFlight,\n                              cabin: val.cabin,\n                              departureSeats: reservedSeats,\n                              returnSeats: val.returnSeats,\n                              price: val.price,\n                              status: val.status,\n                              departurePrice: val.departurePrice,\n                              returnPrice: val.returnPrice,\n                            }\n                          : val;\n                      })\n                    );\n                  } else {\n                    axios.put(\n                      \"http://localhost:8000/admin/reserveUpdateSeats\",\n                      {\n                        _id: resID,\n                        returnSeats: reservedSeats,\n                      }\n                    );\n                    setOpenPopupSeats(false);\n                    setFlights(\n                      flights.map((val) => {\n                        return val._id == resID\n                          ? {\n                              _id: val._id,\n                              user: val.user,\n                              departureFlight: val.departureFlight,\n                              returnFlight: val.returnFlight,\n                              cabin: val.cabin,\n                              departureSeats: val.departureSeats,\n                              returnSeats: reservedSeats,\n                              price: val.price,\n                              status: val.status,\n                              departurePrice: val.departurePrice,\n                              returnPrice: val.returnPrice,\n                            }\n                          : val;\n                      })\n                    );\n                  }\n                }}\n              />\n            </>\n          )}\n        </DialogContent>\n      </Dialog>\n      <Dialog open={openPopupFlight} maxWidth=\"lg\">\n        <DialogTitle>\n          <div className=\"PopupHeaderRes\">\n            Choose {step === 0 ? \"Departure\" : \"Return\"} Flight\n            <button\n              onClick={() => {\n                setOpenPopupFlight(false);\n                setListOfFlights([]);\n                setConfirmed(false);\n              }}\n            >\n              Close\n            </button>\n          </div>\n        </DialogTitle>\n        <DialogContent dividers>\n          <div className=\"listOfFlights\">\n            {listOfFlights.map((val) => {\n              return (\n                <div className=\"flightContainerRes\">\n                  <div className=\"flightRes\">\n                    <h3 id=\"fliNumber\">\n                      Flight Number: <br />\n                      {val.flightNumber}\n                    </h3>\n                    <h3>\n                      Departure Time: <br />\n                      {val.departureTime}\n                    </h3>\n                    <h3>\n                      Arrival Time: <br />\n                      {val.arrivalTime}\n                    </h3>\n                    <h3>\n                      Trip Duration: <br />\n                      {val.tripDuration + \" Hours\"}\n                    </h3>\n                    <h3>\n                      Baggage Allowance: <br />\n                      {val.baggage + \" Bags\"}\n                    </h3>\n                    <h3>\n                      Price: <br />\n                      {val.price + \" L.E\"}\n                    </h3>\n                  </div>\n                  <button\n                    onClick={() => {\n                      setFlightID(val._id);\n                      setOpenPopupMore(true);\n                    }}\n                  >\n                    More Info\n                  </button>\n                  <button\n                    id=\"chooseB\"\n                    onClick={() => {\n                      chooseFlight(val);\n                    }}\n                  >\n                    Choose\n                  </button>\n                </div>\n              );\n            })}\n          </div>\n          {confirmed && (\n            <>\n              <div style={{ textAlign: \"center\" }}>\n                Please Choose {step === 0 ? \"Departure\" : \"Return\"} Flight Seats{\" \"}\n              </div>\n              <Seats\n                flight={{\n                  id: newFlightNumber,\n                  seats:\n                    cabin === \"Economy\" ? newEconomySeats : newBusinessSeats,\n                  people: seatNo.length,\n                  cabin: cabin,\n                }}\n                done={(reservedSeats) => {\n                  if (step === 0) {\n                    axios.put(\n                      \"http://localhost:8000/admin/updateReserveFlights\",\n                      {\n                        _id: resID,\n                        departureFlight: newFlightNumber,\n                        departureSeats: reservedSeats,\n                        departurePrice: newPrice,\n                        price: newTotalPrice,\n                      }\n                    );\n                    setOpenPopupFlight(false);\n                    setListOfFlights([]);\n                    setConfirmed(false);\n                    setOpenPopupDep(false);\n                    setOpenPopupRet(false);\n                    setFlights(\n                      flights.map((val) => {\n                        return val._id == resID\n                          ? {\n                              _id: val._id,\n                              user: val.user,\n                              departureFlight: newFlightNumber,\n                              returnFlight: val.returnFlight,\n                              cabin: val.cabin,\n                              departureSeats: reservedSeats,\n                              returnSeats: val.returnSeats,\n                              price: newTotalPrice,\n                              status: val.status,\n                              departurePrice: newPrice,\n                              returnPrice: val.returnPrice,\n                            }\n                          : val;\n                      })\n                    );\n                  } else {\n                    axios.put(\n                      \"http://localhost:8000/admin/updateReserveFlights\",\n                      {\n                        _id: resID,\n                        returnFlight: newFlightNumber,\n                        returnSeats: reservedSeats,\n                        returnPrice: newPrice,\n                        price: newTotalPrice,\n                      }\n                    );\n                    setOpenPopupFlight(false);\n                    setListOfFlights([]);\n                    setConfirmed(false);\n                    setOpenPopupDep(false);\n                    setOpenPopupRet(false);\n                    setFlights(\n                      flights.map((val) => {\n                        return val._id == resID\n                          ? {\n                              _id: val._id,\n                              user: val.user,\n                              departureFlight: val.departureFlight,\n                              returnFlight: newFlightNumber,\n                              cabin: val.cabin,\n                              departureSeats: val.departureSeats,\n                              returnSeats: reservedSeats,\n                              price: newTotalPrice,\n                              status: val.status,\n                              departurePrice: val.departurePrice,\n                              returnPrice: newPrice,\n                            }\n                          : val;\n                      })\n                    );\n                  }\n                }}\n              />\n            </>\n          )}\n        </DialogContent>\n      </Dialog>\n      <Dialog open={openPopupMore} maxWidth=\"lg\">\n        <DialogTitle>\n          <div className=\"PopupHeaderRes\">\n            Flight Info\n            <button onClick={() => setOpenPopupMore(false)}>Close</button>\n          </div>\n        </DialogTitle>\n        <DialogContent dividers>\n          {listOfFlights.map((val) => {\n            if (val._id == flightID) {\n              return (\n                <div>\n                  <div className=\"flightPopup\">\n                    <h3 id=\"fliNumber\">\n                      Flight Number: <br />\n                      {val.flightNumber}\n                    </h3>\n                    <h3>\n                      Departure Time: <br />\n                      {val.departureTime}\n                    </h3>\n                    <h3>\n                      Departure Date: <br />\n                      {val.departureDate}\n                    </h3>\n                    <h3>\n                      Arrival Time: <br />\n                      {val.arrivalTime}\n                    </h3>\n                    <h3>\n                      Arrival Date: <br />\n                      {val.arrivalDate}\n                    </h3>\n                    <h3>\n                      Trip Duration: <br />\n                      {val.tripDuration + \" Hours\"}\n                    </h3>\n                  </div>\n                  <div className=\"flightPopup\">\n                    <h3 id=\"fliNumber\">\n                      Economy Seats: <br />\n                      {val.numberofEconomySeats}\n                    </h3>\n                    <h3>\n                      Business Seats: <br />\n                      {val.numberofBusinessSeats}\n                    </h3>\n                    <h3>\n                      Departure Airport: <br />\n                      {val.departureAirport}\n                    </h3>\n                    <h3>\n                      Arrival Airport: <br />\n                      {val.arrivalAirport}\n                    </h3>\n                    <h3>\n                      Baggage Allowance: <br />\n                      {val.baggage + \" Bags\"}\n                    </h3>\n                    <h3>\n                      Price: <br />\n                      {val.price + \" L.E\"}\n                    </h3>\n                  </div>\n                </div>\n              );\n            }\n          })}\n        </DialogContent>\n      </Dialog>\n      <Dialog open={openPopupPay} maxWidth=\"lg\">\n        <DialogTitle>\n          <div className=\"PopupHeaderRes\">\n            Pay\n            <button\n              onClick={() => {\n                setOpenPopupPay(false);\n              }}\n            >\n              Close\n            </button>\n          </div>\n        </DialogTitle>\n        <DialogContent dividers>\n          <StripeContainer\n            amount={priceDifference * 100}\n            setConfirmed={setConfirmed}\n            setOpenPopupPay={setOpenPopupPay}\n          />\n        </DialogContent>\n      </Dialog>\n    </div>\n  );\n}\n\nexport default UserReserves;\n","/Users/abdulrahman_dahrawy/Documents/GitHub/Bread-Board/src/Components/EditInfo.js",["157","158","159","160","161","162","163","164","165","166","167","168","169","170","171"],"import { useState, useEffect } from \"react\";\nimport { useNavigate } from \"react-router\";\nimport axios from \"axios\";\nimport \"../App.css\";\nimport { Dialog } from \"@material-ui/core\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\n\nfunction UpdateInfo() {\n  const navigate = useNavigate();\n\n  const [firstName, setFirstName] = useState(null);\n  const [lastName, setLastName] = useState(null);\n  const [passportNumber, setPassportNumber] = useState(null);\n  const [email, setEmail] = useState(null);\n  const [password, setPassword] = useState(null);\n  const [homeAddress, setHomeAddress] = useState(null);\n  const [countryCode, setCountryCode] = useState(null);\n  const [telephoneNumber, setTelephoneNumber] = useState(null);\n  const [secondTelephoneNumber, setSecondTelephoneNumber] = useState(null);\n  const [userName, setUserName] = useState(null);\n\n  const [user, setUser] = useState([]);\n\n  const home = () => {\n    navigate(-1);\n  };\n\n  const passwordChanging = () => {\n    navigate(\"/user/home/editPassword\");\n  };\n\n  const updateInfo = () => {\n    if (countryCode < 0) {\n      alert(\"Country code can't be negative\");\n    } else if (telephoneNumber < 0) {\n      alert(\"Telephone number can't be negative\");\n    } else if (secondTelephoneNumber < 0) {\n      alert(\"Second telephone number can't be negative\");\n    } else {\n      if (telephoneNumber > 0) {\n        if (telephoneNumber.length < 11 || telephoneNumber.length > 11) {\n          alert(\"Telephone number must be 11 digits\");\n          return;\n        }\n      }\n      if (secondTelephoneNumber > 0) {\n        if (\n          secondTelephoneNumber.length < 11 ||\n          secondTelephoneNumber.length > 11\n        ) {\n          alert(\"Second telephone must be 11 digits\");\n          return;\n        }\n      }\n      if (window.confirm(\"Are you sure to update your information?\")) {\n        var val = {\n          emailOld: window.localStorage.getItem(\"user\"),\n          firstName: firstName,\n          lastName: lastName,\n          passportNumber: passportNumber,\n          email: email,\n          homeAddress: homeAddress,\n          countryCode: countryCode != 0 ? countryCode : null,\n          telephoneNumber: telephoneNumber != 0 ? telephoneNumber : null,\n          secondTelephoneNumber:\n            secondTelephoneNumber != 0 ? secondTelephoneNumber : null,\n          userName: userName,\n        };\n        Object.keys(val).forEach(\n          (k) => !val[k] && val[k] !== undefined && delete val[k]\n        );\n        axios\n          .put(\"http://localhost:8000/admin/updateInfo\", val)\n          .then((result) => {\n            if (result.data.message == \"Your Session Expired\") {\n              alert(result.data.message);\n              navigate(\"/\");\n            } else if (result.data.message == \"Error\") {\n              alert(\"Email already exists!!!\");\n            } else {\n              const token = result.data.token;\n              if (email != null) {\n                axios\n                  .put(\"http://localhost:8000/admin/updateReservations\", {\n                    emailOld: window.localStorage.getItem(\"user\"),\n                    email: email,\n                  })\n                  .then((result) => {\n                    if (result.data.message == \"Your Session Expired\") {\n                      alert(result.data.message);\n                      navigate(\"/\");\n                    } else if (result.data.message == \"Success\") {\n                      console.log(token);\n                      window.localStorage.setItem(\"user\", token);\n                    } else {\n                      alert(result.data.message);\n                    }\n                  });\n              }\n              setUser(\n                user.map((val) => {\n                  return {\n                    firstName: firstName != null ? firstName : val.firstName,\n                    lastName: lastName != null ? lastName : val.lastName,\n                    passportNumber:\n                      passportNumber != null\n                        ? passportNumber\n                        : val.passportNumber,\n                    email: email != null ? email : val.email,\n                    homeAddress:\n                      homeAddress != null ? homeAddress : val.homeAddress,\n                    countryCode:\n                      countryCode != null ? countryCode : val.countryCode,\n                    telephoneNumber:\n                      telephoneNumber != null\n                        ? telephoneNumber\n                        : val.telephoneNumber,\n                    secondTelephoneNumber:\n                      secondTelephoneNumber != null\n                        ? secondTelephoneNumber\n                        : val.secondTelephoneNumber,\n                    userName: userName != null ? userName : val.userName,\n                  };\n                })\n              );\n              alert(\"Updated Succesfully\");\n            }\n          });\n      }\n    }\n  };\n\n  useEffect(() => {\n    const listener = (event) => {\n      if (event.code === \"Enter\") {\n        event.preventDefault();\n        updateInfo();\n      }\n      if (event.code === \"Escape\") {\n        event.preventDefault();\n        home();\n      }\n    };\n    document.addEventListener(\"keydown\", listener);\n    return () => {\n      document.removeEventListener(\"keydown\", listener);\n    };\n  });\n\n  useEffect(() => {\n    console.log(window.localStorage.getItem(\"user\"));\n    axios\n      .post(\"http://localhost:8000/admin/getUser\", {\n        email: window.localStorage.getItem(\"user\"),\n      })\n      .then((result) => {\n        if (result.data.message == \"Your Session Expired\") {\n          alert(result.data.message);\n          navigate(\"/\");\n        } else if (result.data.message == \"Error\") {\n          alert(result.data.message);\n        } else {\n          setUser([result.data.user]);\n        }\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }, []);\n\n  return (\n    <div>\n      <div className=\"HeaderContainer\">\n        <div className=\"HeaderButtonInfo\">\n          <button onClick={home}>Back</button>\n        </div>\n        <div className=\"EditInfo\">\n          <h1>Edit Personal Information</h1>\n        </div>\n        <div id=\"passwordB\" className=\"HeaderButtonInfo\">\n          <button onClick={passwordChanging}>Change Password</button>\n        </div>\n      </div>\n      <div className=\"App\">\n        <div className=\"Infoinputs\">\n          <div className=\"InfoinputsSub\">\n            <div>\n              First Name\n              <input\n                type=\"text\"\n                placeholder=\"First Name\"\n                onChange={(event) => {\n                  setFirstName(event.target.value);\n                }}\n              />\n              Last Name\n              <input\n                type=\"text\"\n                placeholder=\"Last Name\"\n                onChange={(event) => {\n                  setLastName(event.target.value);\n                }}\n              />\n              UserName\n              <input\n                type=\"text\"\n                placeholder=\"UserName\"\n                onChange={(event) => {\n                  setUserName(event.target.value);\n                }}\n              />\n            </div>\n            <div>\n              Home Address\n              <input\n                type=\"text\"\n                placeholder=\"Address\"\n                onChange={(event) => {\n                  setHomeAddress(event.target.value);\n                }}\n              />\n              Country Code\n              <input\n                type=\"number\"\n                placeholder=\"Country Code\"\n                onChange={(event) => {\n                  setCountryCode(event.target.value);\n                }}\n              />\n              Passport Number\n              <input\n                type=\"text\"\n                placeholder=\"Passport Number\"\n                onChange={(event) => {\n                  setPassportNumber(event.target.value);\n                }}\n              />\n            </div>\n            <div>\n              Email\n              <input\n                type=\"text\"\n                placeholder=\"Email\"\n                onChange={(event) => {\n                  setEmail(event.target.value);\n                }}\n              />\n              Telephone Number\n              <input\n                type=\"number\"\n                placeholder=\"Telephone Number\"\n                onChange={(event) => {\n                  setTelephoneNumber(event.target.value);\n                }}\n              />\n              Second Telephone Number\n              <input\n                type=\"number\"\n                placeholder=\"Second Telephone Number\"\n                onChange={(event) => {\n                  setSecondTelephoneNumber(event.target.value);\n                }}\n              />\n            </div>\n          </div>\n          <button onClick={updateInfo}>Update</button>\n        </div>\n      </div>\n      <div className=\"listOfFlights\">\n        {user.map((val) => {\n          return (\n            <div className=\"flightSearch\">\n              <div className=\"flight\">\n                <h3>\n                  First Name:\n                  {\" \" + val.firstName}\n                </h3>\n                <h3>\n                  Last Name:\n                  {\" \" + val.lastName}\n                </h3>\n                <h3>\n                  UserName:\n                  {\" \" + val.userName}\n                </h3>\n                <h3>\n                  Home Address:\n                  {\" \" + val.homeAddress}\n                </h3>\n                <h3>\n                  Country Code:\n                  {\" +\" + val.countryCode}\n                </h3>\n              </div>\n              <div className=\"flight\">\n                <h3>\n                  Passport Number:\n                  {\" \" + val.passportNumber}\n                </h3>\n                <h3>\n                  Email:\n                  {\" \" + val.email}\n                </h3>\n                <h3>\n                  Telephone Number:\n                  {\" \" + val.telephoneNumber}\n                </h3>\n                <h3>\n                  Second Telephone Number:\n                  {\" \" + val.secondTelephoneNumber}\n                </h3>\n              </div>\n            </div>\n          );\n        })}\n      </div>\n    </div>\n  );\n}\n\nexport default UpdateInfo;\n","/Users/abdulrahman_dahrawy/Documents/GitHub/Bread-Board/src/Components/ForgotPassword.js",["172","173","174"],"import { useState, useEffect } from \"react\";\nimport { useNavigate } from \"react-router\";\nimport axios from \"axios\";\n\nfunction ForgotPasswword() {\n  const navigate = useNavigate();\n  const [email, setEmail] = useState(\"\");\n  const [userName, setUserName] = useState(\"\");\n\n  const back = () => {\n    navigate(-1);\n  };\n\n  const forgotPasswword = () => {\n    if (email == \"\" || userName == \"\") {\n      alert(\"Please enter your email and username\");\n    } else {\n      axios\n        .put(\"http://localhost:8000/admin/forgotPassword\", {\n          email: email,\n          userName: userName,\n        })\n        .then((result) => {\n          if (result.data == \"Password Changed\") {\n            axios\n              .post(\"http://localhost:8000/admin/sendEmail\", {\n                email: email,\n                password: \"password123\",\n              })\n              .then((result) => {\n                alert(result.data);\n                navigate(-1);\n              });\n          } else {\n            alert(result.data);\n          }\n        })\n        .catch((err) => {\n          console.log(err);\n        });\n    }\n  };\n\n  useEffect(() => {\n    const listener = (event) => {\n      if (event.code === \"Enter\") {\n        event.preventDefault();\n        forgotPasswword();\n      }\n      if (event.code === \"Escape\") {\n        event.preventDefault();\n        back();\n      }\n    };\n    document.addEventListener(\"keydown\", listener);\n    return () => {\n      document.removeEventListener(\"keydown\", listener);\n    };\n  });\n\n  return (\n    <div>\n      <div className=\"HeaderContainer\">\n        <div className=\"HeaderButton\">\n          <button onClick={back}>Back</button>\n        </div>\n        <div className=\"EditPassword\">\n          <h1>Forgot Password</h1>\n        </div>\n      </div>\n      <div className=\"App\">\n        <div className=\"Passwordinputs\">\n          <div>\n            Your Email:\n            <input\n              type=\"text\"\n              placeholder=\"Enter Your Email\"\n              onChange={(event) => {\n                setEmail(event.target.value);\n              }}\n            />\n            Your Username:\n            <input\n              type=\"text\"\n              placeholder=\"Enter Your Username\"\n              onChange={(event) => {\n                setUserName(event.target.value);\n              }}\n            />\n          </div>\n          <button onClick={forgotPasswword}>Send Mail</button>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default ForgotPasswword;\n","/Users/abdulrahman_dahrawy/Documents/GitHub/Bread-Board/src/Components/Seats.js",["175"],"import axios from \"axios\";\nimport React, { useEffect, useState } from \"react\";\nimport { API_URL } from \"../constants\";\n\nconst Seats = ({ flight, done }) => {\n  const { id, seats, people, cabin } = flight;\n  const [reserved, setReserved] = useState(false);\n  const [reservedSeats, setReservedSeats] = useState([]);\n\n  useEffect(() => {\n    axios\n      .get(API_URL + \"/reserve/\" + id + \"/\" + cabin)\n      .then(({ data }) => setReserved(data))\n      .catch((err) => alert(err));\n  }, [id]);\n\n  useEffect(() => {\n    if (reservedSeats.length === people) {\n      done(reservedSeats);\n      setReservedSeats([]);\n      setReserved(false);\n    }\n  }, [reservedSeats, done, people]);\n\n  if (reserved === false) return <div>Loading ...</div>;\n\n  return (\n    <div style={{ textAlign: \"center\" }}>\n      <div>People: {people}</div>\n      <div>Left: {people - reservedSeats.length}</div>\n      <div className=\"seats\">\n        {[...Array(seats)].map((_, i) => {\n          const userReserved = reservedSeats.filter((r) => r === i).length > 0;\n          const otherReserved =\n            reserved.filter((r) =>\n              r.returnFlight === id\n                ? r.returnSeats.includes(i)\n                : r.departureSeats.includes(i)\n            ).length > 0;\n          return (\n            <div\n              className=\"seat\"\n              key={i}\n              style={{\n                backgroundColor: userReserved\n                  ? \"yellow\"\n                  : otherReserved\n                  ? \"red\"\n                  : \"green\",\n              }}\n              onClick={() => {\n                if (userReserved || otherReserved)\n                  return alert(\"Can not select already taken seat\");\n                const n = [...reservedSeats];\n                n.push(i);\n                setReservedSeats(n);\n              }}\n            >\n              {i}\n            </div>\n          );\n        })}\n      </div>\n    </div>\n  );\n};\n\nexport default Seats;\n","/Users/abdulrahman_dahrawy/Documents/GitHub/Bread-Board/src/constants.js",[],"/Users/abdulrahman_dahrawy/Documents/GitHub/Bread-Board/src/Components/StripeContainer.js",[],"/Users/abdulrahman_dahrawy/Documents/GitHub/Bread-Board/src/Components/PaymentForm.js",["176"],"import { CardElement, useElements, useStripe } from \"@stripe/react-stripe-js\";\nimport axios from \"axios\";\nimport React, { useState } from \"react\";\nimport Button from \"@mui/material/Button\";\n\nconst CARD_OPTIONS = {\n  iconStyle: \"solid\",\n  style: {\n    base: {\n      iconColor: \"#c4f0ff\",\n      color: \"#fff\",\n      fontWeight: 500,\n      fontFamily: \"Roboto, Open Sans, Segoe UI, sans-serif\",\n      fontSize: \"16px\",\n      fontSmoothing: \"antialiased\",\n      \":-webkit-autofill\": { color: \"#fce883\" },\n      \"::placeholder\": { color: \"#87bbfd\" },\n    },\n    invalid: {\n      iconColor: \"#ffc7ee\",\n      color: \"#ffc7ee\",\n    },\n  },\n};\n\nfunction PaymentForm({ amount, setConfirmed, setOpenPopupPay }) {\n  const stripe = useStripe();\n  const elements = useElements();\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    const { error, paymentMethod } = await stripe.createPaymentMethod({\n      type: \"card\",\n      card: elements.getElement(CardElement),\n    });\n\n    if (!error) {\n      try {\n        const { id } = paymentMethod;\n        const response = await axios.post(\"http://localhost:8000/payment\", {\n          amount: amount,\n          id,\n        });\n\n        if (response.data.success) {\n          console.log(\"Successful payment\");\n          alert(\"Successful payment\");\n          setConfirmed(true);\n          setOpenPopupPay(false);\n        }\n      } catch (error) {\n        alert(\"Failed payment\");\n      }\n    } else {\n      alert(\"Failed payment\");\n    }\n  };\n\n  return (\n    <>\n      <form onSubmit={handleSubmit}>\n        <div className=\"payment\">\n          <fieldset className=\"FormGroup\">\n            <div className=\"FormRow\">\n              <CardElement options={CARD_OPTIONS} />\n            </div>\n          </fieldset>\n          <Button type=\"submit\">Pay</Button>\n        </div>\n      </form>\n    </>\n  );\n}\n\nexport default PaymentForm;\n",{"ruleId":"177","replacedBy":"178"},{"ruleId":"179","replacedBy":"180"},{"ruleId":"181","severity":1,"message":"182","line":32,"column":10,"nodeType":"183","messageId":"184","endLine":32,"endColumn":25},{"ruleId":"181","severity":1,"message":"185","line":35,"column":10,"nodeType":"183","messageId":"184","endLine":35,"endColumn":26},{"ruleId":"181","severity":1,"message":"186","line":38,"column":10,"nodeType":"183","messageId":"184","endLine":38,"endColumn":20},{"ruleId":"181","severity":1,"message":"187","line":45,"column":10,"nodeType":"183","messageId":"184","endLine":45,"endColumn":25},{"ruleId":"181","severity":1,"message":"188","line":48,"column":10,"nodeType":"183","messageId":"184","endLine":48,"endColumn":26},{"ruleId":"181","severity":1,"message":"189","line":51,"column":10,"nodeType":"183","messageId":"184","endLine":51,"endColumn":20},{"ruleId":"190","severity":1,"message":"191","line":88,"column":34,"nodeType":"192","messageId":"193","endLine":88,"endColumn":36},{"ruleId":"194","severity":1,"message":"195","line":320,"column":36,"nodeType":"196","messageId":"197","endLine":320,"endColumn":38},{"ruleId":"190","severity":1,"message":"191","line":321,"column":25,"nodeType":"192","messageId":"193","endLine":321,"endColumn":27},{"ruleId":"190","severity":1,"message":"191","line":25,"column":15,"nodeType":"192","messageId":"193","endLine":25,"endColumn":17},{"ruleId":"190","severity":1,"message":"191","line":25,"column":33,"nodeType":"192","messageId":"193","endLine":25,"endColumn":35},{"ruleId":"190","severity":1,"message":"191","line":34,"column":35,"nodeType":"192","messageId":"193","endLine":34,"endColumn":37},{"ruleId":"190","severity":1,"message":"191","line":36,"column":42,"nodeType":"192","messageId":"193","endLine":36,"endColumn":44},{"ruleId":"181","severity":1,"message":"198","line":46,"column":9,"nodeType":"183","messageId":"184","endLine":46,"endColumn":17},{"ruleId":"181","severity":1,"message":"199","line":50,"column":9,"nodeType":"183","messageId":"184","endLine":50,"endColumn":14},{"ruleId":"190","severity":1,"message":"191","line":34,"column":17,"nodeType":"192","messageId":"193","endLine":34,"endColumn":19},{"ruleId":"190","severity":1,"message":"191","line":35,"column":16,"nodeType":"192","messageId":"193","endLine":35,"endColumn":18},{"ruleId":"190","severity":1,"message":"191","line":36,"column":13,"nodeType":"192","messageId":"193","endLine":36,"endColumn":15},{"ruleId":"190","severity":1,"message":"191","line":37,"column":16,"nodeType":"192","messageId":"193","endLine":37,"endColumn":18},{"ruleId":"190","severity":1,"message":"191","line":38,"column":22,"nodeType":"192","messageId":"193","endLine":38,"endColumn":24},{"ruleId":"190","severity":1,"message":"191","line":39,"column":19,"nodeType":"192","messageId":"193","endLine":39,"endColumn":21},{"ruleId":"190","severity":1,"message":"191","line":40,"column":19,"nodeType":"192","messageId":"193","endLine":40,"endColumn":21},{"ruleId":"190","severity":1,"message":"191","line":41,"column":23,"nodeType":"192","messageId":"193","endLine":41,"endColumn":25},{"ruleId":"190","severity":1,"message":"191","line":42,"column":16,"nodeType":"192","messageId":"193","endLine":42,"endColumn":18},{"ruleId":"190","severity":1,"message":"200","line":54,"column":29,"nodeType":"192","messageId":"193","endLine":54,"endColumn":31},{"ruleId":"190","severity":1,"message":"191","line":76,"column":30,"nodeType":"192","messageId":"193","endLine":76,"endColumn":32},{"ruleId":"190","severity":1,"message":"191","line":77,"column":30,"nodeType":"192","messageId":"193","endLine":77,"endColumn":32},{"ruleId":"190","severity":1,"message":"191","line":96,"column":32,"nodeType":"192","messageId":"193","endLine":96,"endColumn":34},{"ruleId":"190","severity":1,"message":"191","line":162,"column":44,"nodeType":"192","messageId":"193","endLine":162,"endColumn":46},{"ruleId":"190","severity":1,"message":"191","line":176,"column":33,"nodeType":"192","messageId":"193","endLine":176,"endColumn":35},{"ruleId":"190","severity":1,"message":"191","line":182,"column":38,"nodeType":"192","messageId":"193","endLine":182,"endColumn":40},{"ruleId":"190","severity":1,"message":"200","line":260,"column":30,"nodeType":"192","messageId":"193","endLine":260,"endColumn":32},{"ruleId":"190","severity":1,"message":"191","line":275,"column":29,"nodeType":"192","messageId":"193","endLine":275,"endColumn":31},{"ruleId":"190","severity":1,"message":"191","line":278,"column":29,"nodeType":"192","messageId":"193","endLine":278,"endColumn":31},{"ruleId":"181","severity":1,"message":"201","line":33,"column":10,"nodeType":"183","messageId":"184","endLine":33,"endColumn":15},{"ruleId":"181","severity":1,"message":"186","line":43,"column":10,"nodeType":"183","messageId":"184","endLine":43,"endColumn":20},{"ruleId":"181","severity":1,"message":"202","line":47,"column":10,"nodeType":"183","messageId":"184","endLine":47,"endColumn":15},{"ruleId":"181","severity":1,"message":"189","line":57,"column":10,"nodeType":"183","messageId":"184","endLine":57,"endColumn":20},{"ruleId":"190","severity":1,"message":"191","line":102,"column":34,"nodeType":"192","messageId":"193","endLine":102,"endColumn":36},{"ruleId":"194","severity":1,"message":"195","line":350,"column":36,"nodeType":"196","messageId":"197","endLine":350,"endColumn":38},{"ruleId":"190","severity":1,"message":"191","line":351,"column":25,"nodeType":"192","messageId":"193","endLine":351,"endColumn":27},{"ruleId":"190","severity":1,"message":"191","line":570,"column":49,"nodeType":"192","messageId":"193","endLine":570,"endColumn":51},{"ruleId":"190","severity":1,"message":"191","line":573,"column":56,"nodeType":"192","messageId":"193","endLine":573,"endColumn":58},{"ruleId":"181","severity":1,"message":"203","line":5,"column":10,"nodeType":"183","messageId":"184","endLine":5,"endColumn":16},{"ruleId":"181","severity":1,"message":"204","line":6,"column":8,"nodeType":"183","messageId":"184","endLine":6,"endColumn":19},{"ruleId":"181","severity":1,"message":"205","line":7,"column":8,"nodeType":"183","messageId":"184","endLine":7,"endColumn":21},{"ruleId":"190","severity":1,"message":"191","line":21,"column":21,"nodeType":"192","messageId":"193","endLine":21,"endColumn":23},{"ruleId":"190","severity":1,"message":"191","line":21,"column":42,"nodeType":"192","messageId":"193","endLine":21,"endColumn":44},{"ruleId":"190","severity":1,"message":"191","line":21,"column":70,"nodeType":"192","messageId":"193","endLine":21,"endColumn":72},{"ruleId":"190","severity":1,"message":"200","line":23,"column":28,"nodeType":"192","messageId":"193","endLine":23,"endColumn":30},{"ruleId":"190","severity":1,"message":"191","line":35,"column":37,"nodeType":"192","messageId":"193","endLine":35,"endColumn":39},{"ruleId":"190","severity":1,"message":"191","line":38,"column":44,"nodeType":"192","messageId":"193","endLine":38,"endColumn":46},{"ruleId":"181","severity":1,"message":"206","line":5,"column":10,"nodeType":"183","messageId":"184","endLine":5,"endColumn":16},{"ruleId":"190","severity":1,"message":"191","line":120,"column":33,"nodeType":"192","messageId":"193","endLine":120,"endColumn":35},{"ruleId":"190","severity":1,"message":"191","line":123,"column":40,"nodeType":"192","messageId":"193","endLine":123,"endColumn":42},{"ruleId":"190","severity":1,"message":"191","line":181,"column":32,"nodeType":"192","messageId":"193","endLine":181,"endColumn":34},{"ruleId":"190","severity":1,"message":"200","line":187,"column":34,"nodeType":"192","messageId":"193","endLine":187,"endColumn":36},{"ruleId":"190","severity":1,"message":"191","line":243,"column":43,"nodeType":"192","messageId":"193","endLine":243,"endColumn":45},{"ruleId":"207","severity":1,"message":"208","line":270,"column":6,"nodeType":"209","endLine":270,"endColumn":12,"suggestions":"210"},{"ruleId":"194","severity":1,"message":"195","line":389,"column":32,"nodeType":"196","messageId":"197","endLine":389,"endColumn":34},{"ruleId":"190","severity":1,"message":"191","line":390,"column":27,"nodeType":"192","messageId":"193","endLine":390,"endColumn":29},{"ruleId":"194","severity":1,"message":"195","line":483,"column":32,"nodeType":"196","messageId":"197","endLine":483,"endColumn":34},{"ruleId":"190","severity":1,"message":"191","line":484,"column":27,"nodeType":"192","messageId":"193","endLine":484,"endColumn":29},{"ruleId":"190","severity":1,"message":"191","line":614,"column":40,"nodeType":"192","messageId":"193","endLine":614,"endColumn":42},{"ruleId":"190","severity":1,"message":"191","line":642,"column":40,"nodeType":"192","messageId":"193","endLine":642,"endColumn":42},{"ruleId":"190","severity":1,"message":"191","line":764,"column":40,"nodeType":"192","messageId":"193","endLine":764,"endColumn":42},{"ruleId":"190","severity":1,"message":"191","line":799,"column":40,"nodeType":"192","messageId":"193","endLine":799,"endColumn":42},{"ruleId":"194","severity":1,"message":"195","line":831,"column":36,"nodeType":"196","messageId":"197","endLine":831,"endColumn":38},{"ruleId":"190","severity":1,"message":"191","line":832,"column":25,"nodeType":"192","messageId":"193","endLine":832,"endColumn":27},{"ruleId":"181","severity":1,"message":"203","line":5,"column":10,"nodeType":"183","messageId":"184","endLine":5,"endColumn":16},{"ruleId":"181","severity":1,"message":"204","line":6,"column":8,"nodeType":"183","messageId":"184","endLine":6,"endColumn":19},{"ruleId":"181","severity":1,"message":"205","line":7,"column":8,"nodeType":"183","messageId":"184","endLine":7,"endColumn":21},{"ruleId":"181","severity":1,"message":"211","line":16,"column":10,"nodeType":"183","messageId":"184","endLine":16,"endColumn":18},{"ruleId":"181","severity":1,"message":"212","line":16,"column":20,"nodeType":"183","messageId":"184","endLine":16,"endColumn":31},{"ruleId":"190","severity":1,"message":"200","line":64,"column":36,"nodeType":"192","messageId":"193","endLine":64,"endColumn":38},{"ruleId":"190","severity":1,"message":"200","line":65,"column":44,"nodeType":"192","messageId":"193","endLine":65,"endColumn":46},{"ruleId":"190","severity":1,"message":"200","line":67,"column":35,"nodeType":"192","messageId":"193","endLine":67,"endColumn":37},{"ruleId":"190","severity":1,"message":"191","line":76,"column":37,"nodeType":"192","messageId":"193","endLine":76,"endColumn":39},{"ruleId":"190","severity":1,"message":"191","line":79,"column":44,"nodeType":"192","messageId":"193","endLine":79,"endColumn":46},{"ruleId":"190","severity":1,"message":"191","line":90,"column":45,"nodeType":"192","messageId":"193","endLine":90,"endColumn":47},{"ruleId":"190","severity":1,"message":"191","line":93,"column":52,"nodeType":"192","messageId":"193","endLine":93,"endColumn":54},{"ruleId":"190","severity":1,"message":"191","line":158,"column":33,"nodeType":"192","messageId":"193","endLine":158,"endColumn":35},{"ruleId":"190","severity":1,"message":"191","line":161,"column":40,"nodeType":"192","messageId":"193","endLine":161,"endColumn":42},{"ruleId":"207","severity":1,"message":"213","line":170,"column":6,"nodeType":"209","endLine":170,"endColumn":8,"suggestions":"214"},{"ruleId":"190","severity":1,"message":"191","line":15,"column":15,"nodeType":"192","messageId":"193","endLine":15,"endColumn":17},{"ruleId":"190","severity":1,"message":"191","line":15,"column":33,"nodeType":"192","messageId":"193","endLine":15,"endColumn":35},{"ruleId":"190","severity":1,"message":"191","line":24,"column":27,"nodeType":"192","messageId":"193","endLine":24,"endColumn":29},{"ruleId":"207","severity":1,"message":"215","line":15,"column":6,"nodeType":"209","endLine":15,"endColumn":10,"suggestions":"216"},{"ruleId":"181","severity":1,"message":"217","line":3,"column":17,"nodeType":"183","messageId":"184","endLine":3,"endColumn":25},"no-native-reassign",["218"],"no-negated-in-lhs",["219"],"no-unused-vars","'depEconomySeats' is assigned a value but never used.","Identifier","unusedVar","'depBusinessSeats' is assigned a value but never used.","'depBaggage' is assigned a value but never used.","'arrEconomySeats' is assigned a value but never used.","'arrBusinessSeats' is assigned a value but never used.","'arrBaggage' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'register' is assigned a value but never used.","'guest' is assigned a value but never used.","Expected '!==' and instead saw '!='.","'depID' is assigned a value but never used.","'arrID' is assigned a value but never used.","'Dialog' is defined but never used.","'DialogTitle' is defined but never used.","'DialogContent' is defined but never used.","'Button' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetch'. Either include it or remove the dependency array.","ArrayExpression",["220"],"'password' is assigned a value but never used.","'setPassword' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'navigate'. Either include it or remove the dependency array.",["221"],"React Hook useEffect has a missing dependency: 'cabin'. Either include it or remove the dependency array.",["222"],"'useState' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"223","fix":"224"},{"desc":"225","fix":"226"},{"desc":"227","fix":"228"},"Update the dependencies array to be: [fetch, user]",{"range":"229","text":"230"},"Update the dependencies array to be: [navigate]",{"range":"231","text":"232"},"Update the dependencies array to be: [cabin, id]",{"range":"233","text":"234"},[9743,9749],"[fetch, user]",[5975,5977],"[navigate]",[483,487],"[cabin, id]"]