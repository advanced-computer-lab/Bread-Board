[{"/Users/abdulrahman_dahrawy/Documents/GitHub/Bread-Board/src/index.js":"1","/Users/abdulrahman_dahrawy/Documents/GitHub/Bread-Board/src/reportWebVitals.js":"2","/Users/abdulrahman_dahrawy/Documents/GitHub/Bread-Board/src/App.js":"3","/Users/abdulrahman_dahrawy/Documents/GitHub/Bread-Board/src/backEnd/src/Controller/FlightController.js":"4","/Users/abdulrahman_dahrawy/Documents/GitHub/Bread-Board/src/backEnd/src/models/flightModel.js":"5","/Users/abdulrahman_dahrawy/Documents/GitHub/Bread-Board/src/Components/Login.js":"6","/Users/abdulrahman_dahrawy/Documents/GitHub/Bread-Board/src/Components/Register.js":"7","/Users/abdulrahman_dahrawy/Documents/GitHub/Bread-Board/src/Components/ManageFlights.js":"8","/Users/abdulrahman_dahrawy/Documents/GitHub/Bread-Board/src/Components/SearchFlights.js":"9","/Users/abdulrahman_dahrawy/Documents/GitHub/Bread-Board/src/Components/New.js":"10"},{"size":500,"mtime":1636315212881,"results":"11","hashOfConfig":"12"},{"size":362,"mtime":1636270693187,"results":"13","hashOfConfig":"12"},{"size":666,"mtime":1638105329278,"results":"14","hashOfConfig":"12"},{"size":2837,"mtime":1636298193442,"results":"15","hashOfConfig":"12"},{"size":730,"mtime":1636275444176,"results":"16","hashOfConfig":"12"},{"size":1966,"mtime":1638004832524,"results":"17","hashOfConfig":"12"},{"size":2428,"mtime":1638004742301,"results":"18","hashOfConfig":"12"},{"size":16229,"mtime":1638007202080,"results":"19","hashOfConfig":"12"},{"size":5305,"mtime":1638004641333,"results":"20","hashOfConfig":"12"},{"size":4329,"mtime":1638125278213,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"1kpx71i",{"filePath":"25","messages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"27","messages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"29","messages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"32","messages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"34","messages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"24"},{"filePath":"37","messages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"24"},{"filePath":"40","messages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"24"},{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"45","messages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/abdulrahman_dahrawy/Documents/GitHub/Bread-Board/src/index.js",[],["47","48"],"/Users/abdulrahman_dahrawy/Documents/GitHub/Bread-Board/src/reportWebVitals.js",[],"/Users/abdulrahman_dahrawy/Documents/GitHub/Bread-Board/src/App.js",["49"],"/Users/abdulrahman_dahrawy/Documents/GitHub/Bread-Board/src/backEnd/src/Controller/FlightController.js",[],["50","51"],"/Users/abdulrahman_dahrawy/Documents/GitHub/Bread-Board/src/backEnd/src/models/flightModel.js",[],"/Users/abdulrahman_dahrawy/Documents/GitHub/Bread-Board/src/Components/Login.js",["52","53","54"],"import { useState, useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport axios from \"axios\";\nimport \"../App.css\";\n\nfunction Login() {\n  const navigate = useNavigate();\n\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  const login = () => {\n    if (email == \"\" || password == \"\") {\n      alert(\"Please fill all fields!!!\");\n    } else {\n      axios\n        .post(\"http://localhost:8000/login\", {\n          email: email,\n          password: password,\n        })\n        .then((result) => {\n          if (result.data == \"Success\") {\n            navigate(\"/admin\");\n          } else {\n            alert(result.data);\n          }\n        });\n    }\n  };\n\n  const register = () => {\n    navigate(\"/register\");\n  };\n\n  useEffect(() => {\n    const listener = (event) => {\n      if (event.code === \"Enter\") {\n        event.preventDefault();\n        login();\n      }\n    };\n    document.addEventListener(\"keydown\", listener);\n    return () => {\n      document.removeEventListener(\"keydown\", listener);\n    };\n  });\n\n  return (\n    <div>\n      <div className=\"Login\">\n        <h1>Login</h1>\n      </div>\n      <div className=\"App\">\n        <div className=\"LoginInputs\">\n          <div id=\"loginEmail\">\n            Email:\n            <input\n              type=\"text\"\n              placeholder=\"Email...\"\n              onChange={(event) => {\n                setEmail(event.target.value);\n              }}\n            />\n          </div>\n          <div>\n            Password:\n            <input\n              type=\"password\"\n              placeholder=\"Password...\"\n              onChange={(event) => {\n                setPassword(event.target.value);\n              }}\n            />\n          </div>\n          <div>\n            <button onClick={login}>Login</button>\n            <button onClick={register}>Register</button>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Login;\n","/Users/abdulrahman_dahrawy/Documents/GitHub/Bread-Board/src/Components/Register.js",["55","56","57","58","59","60"],"import { useState, useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport axios from \"axios\";\nimport \"../App.css\";\n\nfunction Register() {\n  const navigate = useNavigate();\n\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [admin, setAdmin] = useState(false);\n\n  const login = () => {\n    navigate(-1);\n  };\n\n  const register = () => {\n    if (name == \"\" || email == \"\" || password == \"\") {\n      alert(\"Please fill all fields!!!\");\n    } else {\n      axios\n        .post(\"http://localhost:8000/register\", {\n          name: name,\n          email: email,\n          password: password,\n          admin: false,\n        })\n        .then((result) => {\n          if (result.data.name == \"ValidationError\") {\n            alert(\"Email already exists!!!\");\n          } else {\n            alert(\"Registered Succefully\");\n            navigate(-1);\n          }\n        });\n    }\n  };\n\n  useEffect(() => {\n    const listener = (event) => {\n      if (event.code === \"Enter\") {\n        event.preventDefault();\n        register();\n      }\n    };\n    document.addEventListener(\"keydown\", listener);\n    return () => {\n      document.removeEventListener(\"keydown\", listener);\n    };\n  });\n\n  return (\n    <div>\n      <div className=\"HeaderContainer\">\n        <div className=\"HeaderButton\">\n          <button onClick={login}>Login</button>\n        </div>\n        <div className=\"Register\">\n          <h1>Register</h1>\n        </div>\n      </div>\n      <div className=\"App\">\n        <div className=\"RegisterInputs\">\n          <div>\n            Name:\n            <input\n              type=\"text\"\n              placeholder=\"Name...\"\n              onChange={(event) => {\n                setName(event.target.value);\n              }}\n            />\n            Email:\n            <input\n              type=\"text\"\n              placeholder=\"Email...\"\n              onChange={(event) => {\n                setEmail(event.target.value);\n              }}\n            />\n            Password:\n            <input\n              type=\"password\"\n              placeholder=\"Password...\"\n              onChange={(event) => {\n                setPassword(event.target.value);\n              }}\n            />\n          </div>\n          <button onClick={register}>Register</button>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Register;\n","/Users/abdulrahman_dahrawy/Documents/GitHub/Bread-Board/src/Components/ManageFlights.js",["61","62","63","64","65","66","67","68"],"import { useState, useEffect } from \"react\";\nimport { useNavigate } from \"react-router\";\nimport axios from \"axios\";\nimport \"../App.css\";\nimport { Dialog } from \"@material-ui/core\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\n\nfunction CreateFlight() {\n  const navigate = useNavigate();\n\n  const [flightNumber, setFlightNumber] = useState(null);\n  const [departureTime, setDepartureTime] = useState(null);\n  const [arrivalTime, setArrivalTime] = useState(null);\n  const [economySeats, setEconomySeats] = useState(null);\n  const [arrivalDate, setArrivalDate] = useState(null);\n  const [departureDate, setDepartureDate] = useState(null);\n  const [businessSeats, setBusinessSeats] = useState(null);\n  const [airport, setAirport] = useState(null);\n\n  const [flightNumberU, setFlightNumberU] = useState(null);\n  const [departureTimeU, setDepartureTimeU] = useState(null);\n  const [arrivalTimeU, setArrivalTimeU] = useState(null);\n  const [economySeatsU, setEconomySeatsU] = useState(null);\n  const [arrivalDateU, setArrivalDateU] = useState(null);\n  const [departureDateU, setDepartureDateU] = useState(null);\n  const [businessSeatsU, setBusinessSeatsU] = useState(null);\n  const [airportU, setAirportU] = useState(null);\n\n  const [listOfFlights, setListOfFlights] = useState([]);\n\n  const [openPopupCreate, setOpenPopupCreate] = useState(false);\n  const [openPopupUpdate, setOpenPopupUpdate] = useState(false);\n\n  const [upID, setUpID] = useState(null);\n\n  const logout = () => {\n    navigate(-1);\n  };\n\n  const create = () => {\n    if (\n      flightNumber == null ||\n      departureTime == null ||\n      arrivalTime == null ||\n      departureDate == null ||\n      arrivalDate == null ||\n      economySeats == null ||\n      businessSeats == null ||\n      airport == null\n    ) {\n      alert(\"Please fill all fields!!!\");\n    } else if (flightNumber <= 0) {\n      alert(\"Flight number must be positive!!!\");\n    } else if (departureDate > arrivalDate) {\n      alert(\"Departure date can't be after Arrival date!!!\");\n    } else if (departureDate == arrivalDate && departureTime >= arrivalTime) {\n      alert(\"Departure time must be before Arrival time if on the same day!!!\");\n    } else {\n      axios\n        .post(\"http://localhost:8000/admin/createFlight\", {\n          flightNumber: flightNumber,\n          departureTime: departureTime,\n          arrivalTime: arrivalTime,\n          numberofEconomySeats: economySeats,\n          arrivalDate: arrivalDate,\n          departureDate: departureDate,\n          numberofBusinessSeats: businessSeats,\n          airport: airport,\n        })\n        .then((result) => {\n          if (result.data.name == \"ValidationError\") {\n            alert(\"Flight number already exists!!!\");\n          } else {\n            console.log(result);\n            setOpenPopupCreate(false);\n            setListOfFlights([...listOfFlights, result.data]);\n            setFlightNumber(null);\n            setDepartureTime(null);\n            setArrivalTime(null);\n            setDepartureDate(null);\n            setArrivalDate(null);\n            setEconomySeats(null);\n            setBusinessSeats(null);\n            setAirport(null);\n          }\n        })\n        .catch((err) => {});\n    }\n  };\n\n  const updFlight = (id) => {\n    if (window.confirm(\"Are you sure to update this Flight?\")) {\n      axios\n        .post(\"http://localhost:8000/admin/searchFlightOne\", { _id: id })\n        .then((result) => {\n          var val = {\n            _id: id,\n            flightNumber: flightNumberU,\n            departureTime: departureTimeU,\n            arrivalTime: arrivalTimeU,\n            numberofEconomySeats: economySeatsU,\n            arrivalDate: arrivalDateU,\n            departureDate: departureDateU,\n            numberofBusinessSeats: businessSeatsU,\n            airport: airportU,\n          };\n          Object.keys(val).forEach(\n            (k) => !val[k] && val[k] !== undefined && delete val[k]\n          );\n          if (flightNumberU != null && flightNumberU <= 0) {\n            alert(\"Flight number must be positive!!!\");\n          } else if (\n            (departureDateU != null\n              ? departureDateU\n              : result.data.departureDate) >\n            (arrivalDateU != null ? arrivalDateU : result.data.arrivalDate)\n          ) {\n            alert(\"Departure date can't be after Arrival date!!!\");\n          } else if (\n            (departureDateU != null\n              ? departureDateU\n              : result.data.departureDate) ==\n              (arrivalDateU != null ? arrivalDateU : result.data.arrivalDate) &&\n            (departureTimeU != null\n              ? departureTimeU\n              : result.data.departureTime) >=\n              (arrivalTimeU != null ? arrivalTimeU : result.data.arrivalTime)\n          ) {\n            alert(\n              \"Departure time must be before Arrival time if on the same day!!!\"\n            );\n          } else {\n            axios\n              .put(\"http://localhost:8000/admin/updateFlight\", val)\n              .then((result) => {\n                if (result.data == \"Error\") {\n                  alert(\"Flight number already exists!!!\");\n                } else {\n                  setOpenPopupUpdate(false);\n                  setListOfFlights(\n                    listOfFlights.map((val) => {\n                      return val._id == id\n                        ? {\n                            _id: id,\n                            flightNumber:\n                              flightNumberU == null\n                                ? val.flightNumber\n                                : flightNumberU,\n                            departureTime:\n                              departureTimeU == null\n                                ? val.departureTime\n                                : departureTimeU,\n                            arrivalTime:\n                              arrivalTimeU == null\n                                ? val.arrivalTime\n                                : arrivalTimeU,\n                            numberofEconomySeats:\n                              economySeatsU == null\n                                ? val.numberofEconomySeats\n                                : economySeatsU,\n                            arrivalDate:\n                              arrivalDateU == null\n                                ? val.arrivalDate\n                                : arrivalDateU,\n                            departureDate:\n                              departureDateU == null\n                                ? val.departureDate\n                                : departureDateU,\n                            numberofBusinessSeats:\n                              businessSeatsU == null\n                                ? val.numberofBusinessSeats\n                                : businessSeatsU,\n                            airport: airportU == null ? val.airport : airportU,\n                          }\n                        : val;\n                    })\n                  );\n                  setFlightNumberU(null);\n                  setDepartureTimeU(null);\n                  setArrivalTimeU(null);\n                  setDepartureDateU(null);\n                  setArrivalDateU(null);\n                  setEconomySeatsU(null);\n                  setBusinessSeatsU(null);\n                  setAirportU(null);\n                }\n              });\n          }\n        })\n        .catch((err) => {\n          console.log(err);\n        });\n    }\n  };\n\n  const delFlight = (id) => {\n    if (window.confirm(\"Are you sure to delete this Flight?\")) {\n      axios\n        .delete(`http://localhost:8000/admin/deleteFlight/${id}`)\n        .then(() => {\n          setListOfFlights(\n            listOfFlights.filter((val) => {\n              return val._id != id;\n            })\n          );\n        });\n    }\n  };\n\n  const searchFlight = () => {\n    navigate(\"/admin/search\");\n  };\n\n  useEffect(() => {\n    const listener = (event) => {\n      if (event.code === \"Enter\") {\n        event.preventDefault();\n        if (openPopupCreate == true) {\n          create();\n        }\n        if (openPopupUpdate == true) {\n          updFlight(upID);\n        }\n      }\n      if (event.code === \"Escape\") {\n        event.preventDefault();\n        logout();\n      }\n    };\n    document.addEventListener(\"keydown\", listener);\n    return () => {\n      document.removeEventListener(\"keydown\", listener);\n    };\n  });\n\n  useEffect(() => {\n    axios\n      .get(\"http://localhost:8000/admin/showFlight\")\n      .then((result) => {\n        setListOfFlights(result.data);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }, []);\n\n  return (\n    <div>\n      <div className=\"HeaderContainer\">\n        <div className=\"HeaderButton\">\n          <button onClick={logout}>Logout</button>\n        </div>\n        <div className=\"Home\">\n          <h1>Welcome Admin</h1>\n          <h2>Manage Flights</h2>\n        </div>\n      </div>\n      <div className=\"App\">\n        <div className=\"flightCRUD\">\n          <button onClick={searchFlight}>Search Flights</button>\n          <button id=\"createB\" onClick={() => setOpenPopupCreate(true)}>\n            + Add Flight\n          </button>\n        </div>\n      </div>\n      <div className=\"listOfFlights\">\n        {listOfFlights.map((val) => {\n          return (\n            <div className=\"flightContainer\">\n              <div className=\"flight\">\n                <h3 id=\"fliNumber\">\n                  Flight Number: <br />\n                  {val.flightNumber}\n                </h3>\n                <h3>\n                  Departure Time: <br />\n                  {val.departureTime}\n                </h3>\n                <h3>\n                  Departure Date: <br />\n                  {val.departureDate}\n                </h3>\n                <h3>\n                  Arrival Time: <br />\n                  {val.arrivalTime}\n                </h3>\n                <h3>\n                  Arrival Date: <br />\n                  {val.arrivalDate}\n                </h3>\n                <h3>\n                  Economy Seats: <br />\n                  {val.numberofEconomySeats}\n                </h3>\n                <h3>\n                  Business Seats: <br />\n                  {val.numberofBusinessSeats}\n                </h3>\n                <h3>\n                  Airport: <br />\n                  {val.airport}\n                </h3>\n              </div>\n              <button\n                onClick={() => {\n                  setUpID(val._id);\n                  setOpenPopupUpdate(true);\n                }}\n              >\n                Update\n              </button>\n              <button\n                id=\"delB\"\n                onClick={() => {\n                  delFlight(val._id);\n                }}\n              >\n                Delete\n              </button>\n            </div>\n          );\n        })}\n      </div>\n      <Dialog open={openPopupCreate} maxWidth=\"lg\">\n        <DialogTitle>\n          <div className=\"PopupHeader\">\n            Create Flight\n            <button onClick={() => setOpenPopupCreate(false)}>Close</button>\n          </div>\n        </DialogTitle>\n        <DialogContent dividers>\n          <div className=\"Popupinputs\">\n            <div>\n              <div>\n                Flight Number\n                <input\n                  type=\"number\"\n                  placeholder=\"Flight Number\"\n                  onChange={(event) => {\n                    setFlightNumber(event.target.value);\n                  }}\n                />\n                Airport\n                <input\n                  type=\"text\"\n                  placeholder=\"Airport\"\n                  onChange={(event) => {\n                    setAirport(event.target.value);\n                  }}\n                />\n              </div>\n              <div>\n                Departure Time\n                <input\n                  type=\"time\"\n                  onChange={(event) => {\n                    setDepartureTime(event.target.value);\n                  }}\n                />\n                Arrival Time\n                <input\n                  type=\"time\"\n                  onChange={(event) => {\n                    setArrivalTime(event.target.value);\n                  }}\n                />\n              </div>\n              <div>\n                Departure Date\n                <input\n                  type=\"date\"\n                  onChange={(event) => {\n                    setDepartureDate(event.target.value);\n                  }}\n                />\n                Arrival Date\n                <input\n                  type=\"date\"\n                  onChange={(event) => {\n                    setArrivalDate(event.target.value);\n                  }}\n                />\n              </div>\n              <div>\n                Economy Seats\n                <input\n                  type=\"number\"\n                  placeholder=\"Economy Seats\"\n                  onChange={(event) => {\n                    setEconomySeats(event.target.value);\n                  }}\n                />\n                Business Seats\n                <input\n                  type=\"number\"\n                  placeholder=\"Business Seats\"\n                  onChange={(event) => {\n                    setBusinessSeats(event.target.value);\n                  }}\n                />\n              </div>\n            </div>\n            <button onClick={create}>Create</button>\n          </div>\n        </DialogContent>\n      </Dialog>\n      <Dialog open={openPopupUpdate} maxWidth=\"lg\">\n        <DialogTitle>\n          <div className=\"PopupHeader\">\n            Update Flight\n            <button onClick={() => setOpenPopupUpdate(false)}>Close</button>\n          </div>\n        </DialogTitle>\n        <DialogContent dividers>\n          <div className=\"Popupinputs\">\n            <div>\n              <div>\n                Flight Number\n                <input\n                  type=\"number\"\n                  placeholder=\"Flight Number\"\n                  onChange={(event) => {\n                    setFlightNumberU(event.target.value);\n                  }}\n                />\n                Airport\n                <input\n                  type=\"text\"\n                  placeholder=\"Airport\"\n                  onChange={(event) => {\n                    setAirportU(event.target.value);\n                  }}\n                />\n              </div>\n              <div>\n                Departure Time\n                <input\n                  type=\"time\"\n                  onChange={(event) => {\n                    setDepartureTimeU(event.target.value);\n                  }}\n                />\n                Arrival Time\n                <input\n                  type=\"time\"\n                  onChange={(event) => {\n                    setArrivalTimeU(event.target.value);\n                  }}\n                />\n              </div>\n              <div>\n                Departure Date\n                <input\n                  type=\"date\"\n                  onChange={(event) => {\n                    setDepartureDateU(event.target.value);\n                  }}\n                />\n                Arrival Date\n                <input\n                  type=\"date\"\n                  onChange={(event) => {\n                    setArrivalDateU(event.target.value);\n                  }}\n                />\n              </div>\n              <div>\n                Economy Seats\n                <input\n                  type=\"number\"\n                  placeholder=\"Economy Seats\"\n                  onChange={(event) => {\n                    setEconomySeatsU(event.target.value);\n                  }}\n                />\n                Business Seats\n                <input\n                  type=\"number\"\n                  placeholder=\"Business Seats\"\n                  onChange={(event) => {\n                    setBusinessSeatsU(event.target.value);\n                  }}\n                />\n              </div>\n            </div>\n            <button\n              onClick={() => {\n                updFlight(upID);\n              }}\n            >\n              Update\n            </button>\n          </div>\n        </DialogContent>\n      </Dialog>\n    </div>\n  );\n}\n\nexport default CreateFlight;\n","/Users/abdulrahman_dahrawy/Documents/GitHub/Bread-Board/src/Components/SearchFlights.js",[],"/Users/abdulrahman_dahrawy/Documents/GitHub/Bread-Board/src/Components/New.js",[],{"ruleId":"69","replacedBy":"70"},{"ruleId":"71","replacedBy":"72"},{"ruleId":"73","severity":1,"message":"74","line":5,"column":8,"nodeType":"75","messageId":"76","endLine":5,"endColumn":21},{"ruleId":"69","replacedBy":"77"},{"ruleId":"71","replacedBy":"78"},{"ruleId":"79","severity":1,"message":"80","line":13,"column":15,"nodeType":"81","messageId":"82","endLine":13,"endColumn":17},{"ruleId":"79","severity":1,"message":"80","line":13,"column":33,"nodeType":"81","messageId":"82","endLine":13,"endColumn":35},{"ruleId":"79","severity":1,"message":"80","line":22,"column":27,"nodeType":"81","messageId":"82","endLine":22,"endColumn":29},{"ruleId":"73","severity":1,"message":"83","line":12,"column":10,"nodeType":"75","messageId":"76","endLine":12,"endColumn":15},{"ruleId":"73","severity":1,"message":"84","line":12,"column":17,"nodeType":"75","messageId":"76","endLine":12,"endColumn":25},{"ruleId":"79","severity":1,"message":"80","line":19,"column":14,"nodeType":"81","messageId":"82","endLine":19,"endColumn":16},{"ruleId":"79","severity":1,"message":"80","line":19,"column":29,"nodeType":"81","messageId":"82","endLine":19,"endColumn":31},{"ruleId":"79","severity":1,"message":"80","line":19,"column":47,"nodeType":"81","messageId":"82","endLine":19,"endColumn":49},{"ruleId":"79","severity":1,"message":"80","line":30,"column":32,"nodeType":"81","messageId":"82","endLine":30,"endColumn":34},{"ruleId":"79","severity":1,"message":"80","line":57,"column":30,"nodeType":"81","messageId":"82","endLine":57,"endColumn":32},{"ruleId":"79","severity":1,"message":"80","line":72,"column":32,"nodeType":"81","messageId":"82","endLine":72,"endColumn":34},{"ruleId":"79","severity":1,"message":"80","line":123,"column":44,"nodeType":"81","messageId":"82","endLine":123,"endColumn":46},{"ruleId":"79","severity":1,"message":"80","line":137,"column":33,"nodeType":"81","messageId":"82","endLine":137,"endColumn":35},{"ruleId":"79","severity":1,"message":"80","line":143,"column":38,"nodeType":"81","messageId":"82","endLine":143,"endColumn":40},{"ruleId":"79","severity":1,"message":"85","line":204,"column":30,"nodeType":"81","messageId":"82","endLine":204,"endColumn":32},{"ruleId":"79","severity":1,"message":"80","line":219,"column":29,"nodeType":"81","messageId":"82","endLine":219,"endColumn":31},{"ruleId":"79","severity":1,"message":"80","line":222,"column":29,"nodeType":"81","messageId":"82","endLine":222,"endColumn":31},"no-native-reassign",["86"],"no-negated-in-lhs",["87"],"no-unused-vars","'ManageFlights' is defined but never used.","Identifier","unusedVar",["86"],["87"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'admin' is assigned a value but never used.","'setAdmin' is assigned a value but never used.","Expected '!==' and instead saw '!='.","no-global-assign","no-unsafe-negation"]